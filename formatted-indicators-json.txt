
[
 {
  'indicator name': 'Accumulation/Distribution',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Accumulation/Distribution study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Accumulation/Distribution):
To include the Accumulation/Distribution study, add the following in the `studies` array:
[
  {
    "name": "Accumulation/Distribution",       # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "override": {
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.color": "rgb(33,150,243)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Accumulation/Distribution",
      "forceOverlay": false,
      "override": {
        "Plot.plottype": "line",
        "Plot.linewidth": 1,
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Accumulation/Distribution study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Accumulative Swing Index',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Accumulative Swing Index study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Accumulative Swing Index):
To include the Accumulative Swing Index study, add the following in the `studies` array:
[
  {
    "name": "Accumulative Swing Index",        # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main pane.
    "input": {
      "in_0": 10                               # Limit move value (Min: 0.1, Max: 100000).
    },
    "override": {
      "ASI.plottype": "line",                  # Plot type (e.g., 'line').
      "ASI.linewidth": 1,                       # Line width for the study plot (Min: 1, Max: 10).
      "ASI.color": "rgb(33,150,243)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 300,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Accumulative Swing Index",
      "forceOverlay": false,
      "input": {
        "in_0": 10
      },
      "override": {
        "ASI.plottype": "line",
        "ASI.linewidth": 1,
        "ASI.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Accumulative Swing Index study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Advance/Decline',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Advance/Decline study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Advance/Decline):
To include the Advance/Decline study, add the following in the `studies` array:
[
  {
    "name": "Advance/Decline",                 # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main pane.
    "input": {
      "in_0": 10                               # Length for the Advance/Decline calculation (Min: 1, Max: 2000).
    },
    "override": {
      "Plot.plottype": "line",                # Plot type (e.g., 'line').
      "Plot.linewidth": 1,                    # Line width for the study plot (Min: 1, Max: 10).
      "Plot.color": "rgb(33,150,243)"         # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Advance/Decline",
      "forceOverlay": false,
      "input": {
        "in_0": 10
      },
      "override": {
        "Plot.plottype": "line",
        "Plot.linewidth": 1,
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Advance/Decline study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Arnaud Legoux Moving Average',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Arnaud Legoux Moving Average study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Arnaud Legoux Moving Average):
To include the Arnaud Legoux Moving Average study, add the following in the `studies` array:
[
  {
    "name": "Arnaud Legoux Moving Average",    # The study to add.
    "input": {
      "in_0": 9,                               # Window size (Min: 0, Max: 5000).
      "in_1": 0.85,                            # Offset (Min: -100000, Max: 100000).
      "in_2": 6                                # Sigma (Min: -100000, Max: 100000).
    },
    "override": {
      "Plot.plottype": "line",                # Plot type (e.g., 'line').
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.color": "rgb(33,150,243)"         # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Arnaud Legoux Moving Average",
      "input": {
        "in_0": 9,
        "in_1": 0.85,
        "in_2": 6
      },
      "override": {
        "Plot.plottype": "line",
        "Plot.linewidth": 1,
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Arnaud Legoux Moving Average study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Aroon',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Aroon study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Aroon):
To include the Aroon study, add the following in the `studies` array:
[
  {
    "name": "Aroon",                          # The study to add.
    "forceOverlay": false,                    # Whether to force the study to overlay on the main chart.
    "input": {
      "in_0": 14                               # Length for the Aroon calculation.
    },
    "override": {
      "Upper.visible": true,                   # Visibility of the upper line.
      "Upper.plottype": "line",                # Plot type for the upper line.
      "Upper.linewidth": 1,                    # Line width for the upper line.
      "Upper.color": "rgb(251,140,0)",        # Color for the upper line in RGB format.
      "Lower.visible": true,                   # Visibility of the lower line.
      "Lower.plottype": "line",                # Plot type for the lower line.
      "Lower.linewidth": 1,                    # Line width for the lower line.
      "Lower.color": "rgb(33,150,243)"        # Color for the lower line in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Aroon",
      "forceOverlay": false,
      "input": {
        "in_0": 14
      },
      "override": {
        "Upper.visible": true,
        "Upper.plottype": "line",
        "Upper.linewidth": 1,
        "Upper.color": "rgb(251,140,0)",
        "Lower.visible": true,
        "Lower.plottype": "line",
        "Lower.linewidth": 1,
        "Lower.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Aroon study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Average Directional Index',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Average Directional Index study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Average Directional Index):
To include the Average Directional Index study, add the following in the `studies` array:
[
  {
    "name": "Average Directional Index",       # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "input": {
      "in_0": 14,                              # Smoothing (Min: -100000, Max: 100000).
      "in_1": 14                               # DI length (Min: -100000, Max: 100000).
    },
    "override": {
      "ADX.plottype": "line",                  # Plot type (e.g., 'line').
      "ADX.linewidth": 1,                       # Line width for the study plot (Min: 1, Max: 10).
      "ADX.color": "rgb(255,82,82)"            # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Average Directional Index",
      "forceOverlay": false,
      "input": {
        "in_0": 14,
        "in_1": 14
      },
      "override": {
        "ADX.plottype": "line",
        "ADX.linewidth": 1,
        "ADX.color": "rgb(255,82,82)"
      }
    }
  ]
}

This request generates a chart with the Average Directional Index study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Average True Range',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Average True Range study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Average True Range):
To include the Average True Range study, add the following in the `studies` array:
[
  {
    "name": "Average True Range",              # The study to add.
    "forceOverlay": false,                      # Indicates whether to overlay the study on the main chart.
    "input": {
      "in_0": 14                                # Length for the Average True Range.
    },
    "override": {
      "Plot.linewidth": 1,                      # Line width for the study plot.
      "Plot.color": "rgb(128,25,34)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Average True Range",
      "forceOverlay": false,
      "input": {
        "in_0": 14
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.color": "rgb(128,25,34)"
      }
    }
  ]
}

This request generates a chart with the Average True Range study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Awesome Oscillator',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Awesome Oscillator study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Awesome Oscillator):
To include the Awesome Oscillator study, add the following in the `studies` array:
[
  {
    "name": "Awesome Oscillator",              # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "override": {
      "Plot.plottype": "histogram",            # Plot type (e.g., 'line', 'histogram').
      "Plot.color.0": "rgb(242,54,69)",        # Color for the first plot.
      "Plot.color.1": "rgb(8,153,129)"         # Color for the second plot.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Awesome Oscillator",
      "forceOverlay": false,
      "override": {
        "Plot.plottype": "histogram",
        "Plot.color.0": "rgb(242,54,69)",
        "Plot.color.1": "rgb(8,153,129)"
      }
    }
  ]
}

This request generates a chart with the Awesome Oscillator study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Balance of Power',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Balance of Power study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "override": {
    "showMainPane": false                     # Whether to show the main pane or not.
  }
}

#### Studies Section (For Balance of Power):
To include the Balance of Power study, add the following in the `studies` array:
[
  {
    "name": "Balance of Power",                # The study to add.
    "forceOverlay": false,                     # Whether to force the study to overlay on the main chart.
    "override": {
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(255,82,82)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "override": {
    "showMainPane": false
  },
  "studies": [
    {
      "name": "Balance of Power",
      "forceOverlay": false,
      "override": {
        "Plot.plottype": "line",
        "Plot.color": "rgb(255,82,82)"
      }
    }
  ]
}

This request generates a chart with the Balance of Power study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Bollinger Bands',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Bollinger Bands study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Bollinger Bands):
To include the Bollinger Bands study, add the following in the `studies` array:
[
  {
    "name": "Bollinger Bands",                 # The study to add.
    "input": {
      "in_0": 20,                              # Length for the Bollinger Bands.
      "in_1": 2                                # Multiplier for the standard deviation.
    },
    "override": {
      "Median.visible": true,                  # Visibility of the median line.
      "Median.plottype": "line",               # Plot type for the median.
      "Median.color": "rgb(255,109,0)",       # Color for the median line.
      "Upper.visible": true,                   # Visibility of the upper band.
      "Upper.plottype": "line",                # Plot type for the upper band.
      "Upper.color": "rgb(33,150,243)",       # Color for the upper band.
      "Lower.visible": true,                   # Visibility of the lower band.
      "Lower.plottype": "line",                # Plot type for the lower band.
      "Lower.color": "rgb(33,150,243)",       # Color for the lower band.
      "Plots Background.visible": true,        # Visibility of the background plots.
      "Plots Background.color": "rgba(33,150,243,0.1)" # Background color.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Bollinger Bands",
      "input": {
        "in_0": 20,
        "in_1": 2
      },
      "override": {
        "Median.visible": true,
        "Median.plottype": "line",
        "Median.color": "rgb(255,109,0)",
        "Upper.visible": true,
        "Upper.plottype": "line",
        "Upper.color": "rgb(33,150,243)",
        "Lower.visible": true,
        "Lower.plottype": "line",
        "Lower.color": "rgb(33,150,243)",
        "Plots Background.visible": true,
        "Plots Background.color": "rgba(33,150,243,0.1)"
      }
    }
  ]
}

This request generates a chart with the Bollinger Bands study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Bollinger Bands %B',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Bollinger Bands %B study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "override": {
    "showMainPane": false                     # Whether to show the main pane.
  }
}

#### Studies Section (For Bollinger Bands %B):
To include the Bollinger Bands %B study, add the following in the `studies` array:
[
  {
    "name": "Bollinger Bands %B",              # The study to add.
    "forceOverlay": false,                      # Whether to force the study to overlay the main chart.
    "input": {
      "in_0": 20,                              # Length for the Bollinger Bands.
      "in_1": 2                                # Multiplier for the Bollinger Bands.
    },
    "override": {
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(34,171,148)",         # Plot color in RGB format.
      "UpperLimit.visible": true,               # Whether to show the upper limit line.
      "UpperLimit.linestyle": 2,                # Line style for the upper limit.
      "UpperLimit.linewidth": 1,                # Line width for the upper limit.
      "UpperLimit.value": 1,                    # Value for the upper limit.
      "UpperLimit.color": "rgb(120,123,134)",  # Color for the upper limit line.
      "LowerLimit.visible": true,               # Whether to show the lower limit line.
      "LowerLimit.linestyle": 2,                # Line style for the lower limit.
      "LowerLimit.linewidth": 1,                # Line width for the lower limit.
      "LowerLimit.value": 0,                    # Value for the lower limit.
      "LowerLimit.color": "rgb(120,123,134)",  # Color for the lower limit line.
      "Hlines Background.visible": true,        # Whether to show the background for horizontal lines.
      "Hlines Background.color": "rgba(38,166,154,0.1)" # Background color for horizontal lines.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "override": {
    "showMainPane": false
  },
  "studies": [
    {
      "name": "Bollinger Bands %B",
      "forceOverlay": false,
      "input": {
        "in_0": 20,
        "in_1": 2
      },
      "override": {
        "Plot.plottype": "line",
        "Plot.color": "rgb(34,171,148)",
        "UpperLimit.visible": true,
        "UpperLimit.linestyle": 2,
        "UpperLimit.linewidth": 1,
        "UpperLimit.value": 1,
        "UpperLimit.color": "rgb(120,123,134)",
        "LowerLimit.visible": true,
        "LowerLimit.linestyle": 2,
        "LowerLimit.linewidth": 1,
        "LowerLimit.value": 0,
        "LowerLimit.color": "rgb(120,123,134)",
        "Hlines Background.visible": true,
        "Hlines Background.color": "rgba(38,166,154,0.1)"
      }
    }
  ]
}

This request generates a chart with the Bollinger Bands %B study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Bollinger Bands Width',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Bollinger Bands Width study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Bollinger Bands Width):
To include the Bollinger Bands Width study, add the following in the `studies` array:
[
  {
    "name": "Bollinger Bands Width",           # The study to add.
    "forceOverlay": false,                      # Indicates whether to overlay the study on the main pane.
    "input": {
      "in_0": 20,                              # Length for the Bollinger Bands (Min: 1, Max: 10000).
      "in_1": 2                                # Multiplier for the Bollinger Bands (Min: 0.001, Max: 50).
    },
    "override": {
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(255,109,0)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 300,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Bollinger Bands Width",
      "forceOverlay": false,
      "input": {
        "in_0": 20,
        "in_1": 2
      },
      "override": {
        "Plot.plottype": "line",
        "Plot.color": "rgb(255,109,0)"
      }
    }
  ]
}

This request generates a chart with the Bollinger Bands Width study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Chaikin Money Flow',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Chaikin Money Flow study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Chaikin Money Flow):
To include the Chaikin Money Flow study, add the following in the `studies` array:
[
  {
    "name": "Chaikin Money Flow",              # The study to add.
    "forceOverlay": false,                     # Whether to overlay the study on the main chart.
    "input": {
      "in_0": 20                                # Length for the Chaikin Money Flow.
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(67,160,71)",         # Plot color in RGB format.
      "Zero.visible": true,                     # Visibility of the zero line.
      "Zero.linestyle": 2,                      # Line style for the zero line.
      "Zero.linewidth": 1,                      # Line width for the zero line.
      "Zero.color": "rgb(120,123,134)",        # Color for the zero line.
      "Zero.value": 0                           # Value for the zero line.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Chaikin Money Flow",
      "forceOverlay": false,
      "input": {
        "in_0": 20
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(67,160,71)",
        "Zero.visible": true,
        "Zero.linestyle": 2,
        "Zero.linewidth": 1,
        "Zero.color": "rgb(120,123,134)",
        "Zero.value": 0
      }
    }
  ]
}

This request generates a chart with the Chaikin Money Flow study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Chaikin Oscillator',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Chaikin Oscillator study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Chaikin Oscillator):
To include the Chaikin Oscillator study, add the following in the `studies` array:
[
  {
    "name": "Chaikin Oscillator",              # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "input": {
      "in_0": 3,                               # Short period for the oscillator.
      "in_1": 10                               # Long period for the oscillator.
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(67,160,71)",          # Plot color in RGB format.
      "Zero.visible": true,                     # Visibility of the zero line.
      "Zero.linestyle": 2,                      # Line style for the zero line.
      "Zero.linewidth": 1,                      # Line width for the zero line.
      "Zero.color": "rgb(120,123,134)",        # Color for the zero line.
      "Zero.value": 0                           # Value for the zero line.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Chaikin Oscillator",
      "forceOverlay": false,
      "input": {
        "in_0": 3,
        "in_1": 10
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(67,160,71)",
        "Zero.visible": true,
        "Zero.linestyle": 2,
        "Zero.linewidth": 1,
        "Zero.color": "rgb(120,123,134)",
        "Zero.value": 0
      }
    }
  ]
}

This request generates a chart with the Chaikin Oscillator study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Chaikin Volatility',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Chaikin Volatility study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "override": {
    "showMainPane": false                     # Whether to show the main pane or not.
  }
}

#### Studies Section (For Chaikin Volatility):
To include the Chaikin Volatility study, add the following in the `studies` array:
[
  {
    "name": "Chaikin Volatility",              # The study to add.
    "forceOverlay": false,                     # Whether to force the study to overlay on the main chart.
    "input": {
      "periods": 10,                           # Periods for the study (Min: 1, Max: 2000).
      "rocLookback": 10                        # Rate of change lookback (Min: 1, Max: 2000).
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(236,64,122)",        # Plot color in RGB format.
      "Zero.visible": true,                     # Whether to show the zero line.
      "Zero.linestyle": 2,                      # Line style for the zero line (Min: 0, Max: 2).
      "Zero.linewidth": 1,                      # Line width for the zero line (Min: 1, Max: 10).
      "Zero.color": "rgb(120,123,134)",        # Zero line color in RGB format.
      "Zero.value": 0                          # Value for the zero line (Min: -1000000, Max: 1000000).
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "override": {
    "showMainPane": false
  },
  "studies": [
    {
      "name": "Chaikin Volatility",
      "forceOverlay": false,
      "input": {
        "periods": 10,
        "rocLookback": 10
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(236,64,122)",
        "Zero.visible": true,
        "Zero.linestyle": 2,
        "Zero.linewidth": 1,
        "Zero.color": "rgb(120,123,134)",
        "Zero.value": 0
      }
    }
  ]
}

This request generates a chart with the Chaikin Volatility study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Chande Kroll Stop',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Chande Kroll Stop study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to force overlay on the chart.
}

#### Studies Section (For Chande Kroll Stop):
To include the Chande Kroll Stop study, add the following in the `studies` array:
[
  {
    "name": "Chande Kroll Stop",               # The study to add.
    "input": {
      "in_0": 10,                              # p (Min: 1, Max: 4999).
      "in_1": 1,                               # x (Min: 1, Max: 1000000).
      "in_2": 9                                # q (Min: 1, Max: 1000000).
    },
    "override": {
      "Long.visible": true,                    # Long line visibility.
      "Long.linewidth": 1,                     # Long line width (Min: 1, Max: 10).
      "Long.plottype": "line",                 # Long plot type (e.g., 'line').
      "Long.color": "rgb(33,150,243)",         # Long plot color in RGB format.
      "Short.visible": true,                   # Short line visibility.
      "Short.linewidth": 1,                    # Short line width (Min: 1, Max: 10).
      "Short.plottype": "line",                 # Short plot type (e.g., 'line').
      "Short.color": "rgb(255,109,0)"          # Short plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Chande Kroll Stop",
      "input": {
        "in_0": 10,
        "in_1": 1,
        "in_2": 9
      },
      "override": {
        "Long.visible": true,
        "Long.linewidth": 1,
        "Long.plottype": "line",
        "Long.color": "rgb(33,150,243)",
        "Short.visible": true,
        "Short.linewidth": 1,
        "Short.plottype": "line",
        "Short.color": "rgb(255,109,0)"
      }
    }
  ]
}

This request generates a chart with the Chande Kroll Stop study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Chande Momentum Oscillator',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Chande Momentum Oscillator study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Chande Momentum Oscillator):
To include the Chande Momentum Oscillator study, add the following in the `studies` array:
[
  {
    "name": "Chande Momentum Oscillator",      # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "input": {
      "in_0": 9                                 # Length for the oscillator.
    },
    "override": {
      "Plot.linewidth": 1,                      # Line width for the study plot.
      "Plot.plottype": "line",                  # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Chande Momentum Oscillator",
      "forceOverlay": false,
      "input": {
        "in_0": 9
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Chande Momentum Oscillator study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Chop Zone',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Chop Zone study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Chop Zone):
To include the Chop Zone study, add the following in the `studies` array:
[
  {
    "name": "Chop Zone",                       # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "override": {
      "Plot.plottype": "columns",              # Plot type (e.g., 'columns').
      "Plot.color.0": "rgb(38,198,218)",      # Color for the first plot.
      "Plot.color.1": "rgb(67,160,71)",       # Color for the second plot.
      "Plot.color.2": "rgb(165,214,167)",      # Color for the third plot.
      "Plot.color.3": "rgb(8,153,129)",        # Color for the fourth plot.
      "Plot.color.4": "rgb(213,0,0)",          # Color for the fifth plot.
      "Plot.color.5": "rgb(233,30,99)",        # Color for the sixth plot.
      "Plot.color.6": "rgb(255,109,0)",        # Color for the seventh plot.
      "Plot.color.7": "rgb(255,183,77)",       # Color for the eighth plot.
      "Plot.color.8": "rgb(253,216,53)"        # Color for the ninth plot.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Chop Zone",
      "forceOverlay": false,
      "override": {
        "Plot.plottype": "columns",
        "Plot.color.0": "rgb(38,198,218)",
        "Plot.color.1": "rgb(67,160,71)",
        "Plot.color.2": "rgb(165,214,167)",
        "Plot.color.3": "rgb(8,153,129)",
        "Plot.color.4": "rgb(213,0,0)",
        "Plot.color.5": "rgb(233,30,99)",
        "Plot.color.6": "rgb(255,109,0)",
        "Plot.color.7": "rgb(255,183,77)",
        "Plot.color.8": "rgb(253,216,53)"
      }
    }
  ]
}

This request generates a chart with the Chop Zone study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Choppiness Index',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Choppiness Index study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Choppiness Index):
To include the Choppiness Index study, add the following in the `studies` array:
[
  {
    "name": "Choppiness Index",                # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "input": {
      "in_0": 14                               # Look-back period for the Choppiness Index.
    },
    "override": {
      "Plot.linewidth": 1,                    # Line width for the study plot.
      "Plot.plottype": "line",                # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)",        # Plot color in RGB format.
      "UpperLimit.visible": true,              # Visibility of the upper limit line.
      "UpperLimit.linestyle": 2,               # Line style for the upper limit.
      "UpperLimit.linewidth": 1,               # Line width for the upper limit.
      "UpperLimit.value": 61.8,                # Value for the upper limit.
      "UpperLimit.color": "rgb(120,123,134)",  # Color for the upper limit line.
      "LowerLimit.visible": true,              # Visibility of the lower limit line.
      "LowerLimit.linestyle": 2,               # Line style for the lower limit.
      "LowerLimit.linewidth": 1,               # Line width for the lower limit.
      "LowerLimit.value": 38.2,                # Value for the lower limit.
      "LowerLimit.color": "rgb(120,123,134)",  # Color for the lower limit line.
      "Hlines Background.visible": true,       # Visibility of the horizontal lines background.
      "Hlines Background.color": "rgba(33,150,243,0.1)" # Background color for horizontal lines.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 300,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Choppiness Index",
      "forceOverlay": false,
      "input": {
        "in_0": 14
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)",
        "UpperLimit.visible": true,
        "UpperLimit.linestyle": 2,
        "UpperLimit.linewidth": 1,
        "UpperLimit.value": 61.8,
        "UpperLimit.color": "rgb(120,123,134)",
        "LowerLimit.visible": true,
        "LowerLimit.linestyle": 2,
        "LowerLimit.linewidth": 1,
        "LowerLimit.value": 38.2,
        "LowerLimit.color": "rgb(120,123,134)",
        "Hlines Background.visible": true,
        "Hlines Background.color": "rgba(33,150,243,0.1)"
      }
    }
  ]
}

This request generates a chart with the Choppiness Index study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Commodity Channel Index',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Commodity Channel Index study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "override": {
    "showMainPane": false                     # Whether to show the main pane.
  }
}

#### Studies Section (For Commodity Channel Index):
To include the Commodity Channel Index study, add the following in the `studies` array:
[
  {
    "name": "Commodity Channel Index",         # The study to add.
    "forceOverlay": false,                     # Whether to force overlay on the main chart.
    "input": {
      "in_0": 20,                              # Length for the CCI calculation (Min: 1, Max: 2000).
      "smoothingLine": "SMA",                  # Smoothing line type (SMA, EMA, WMA).
      "smoothingLength": 20                     # Smoothing length (Min: 1, Max: 10000).
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)",         # Plot color in RGB format.
      "UpperLimit.visible": true,               # Whether to show the upper limit line.
      "UpperLimit.linestyle": 2,                # Line style for the upper limit.
      "UpperLimit.linewidth": 1,                # Line width for the upper limit.
      "UpperLimit.value": 100,                  # Value for the upper limit (Min: -1000000, Max: 1000000).
      "UpperLimit.color": "rgb(120,123,134)",  # Color for the upper limit line.
      "LowerLimit.visible": true,               # Whether to show the lower limit line.
      "LowerLimit.linestyle": 2,                # Line style for the lower limit.
      "LowerLimit.linewidth": 1,                # Line width for the lower limit.
      "LowerLimit.value": -100,                 # Value for the lower limit (Min: -1000000, Max: 1000000).
      "LowerLimit.color": "rgb(120,123,134)",  # Color for the lower limit line.
      "Hlines Background.visible": true,        # Whether to show the background for horizontal lines.
      "Hlines Background.color": "rgba(33,150,243,0.1)" # Background color for horizontal lines.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "override": {
    "showMainPane": false
  },
  "studies": [
    {
      "name": "Commodity Channel Index",
      "forceOverlay": false,
      "input": {
        "in_0": 20,
        "smoothingLine": "SMA",
        "smoothingLength": 20
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)",
        "UpperLimit.visible": true,
        "UpperLimit.linestyle": 2,
        "UpperLimit.linewidth": 1,
        "UpperLimit.value": 100,
        "UpperLimit.color": "rgb(120,123,134)",
        "LowerLimit.visible": true,
        "LowerLimit.linestyle": 2,
        "LowerLimit.linewidth": 1,
        "LowerLimit.value": -100,
        "LowerLimit.color": "rgb(120,123,134)",
        "Hlines Background.visible": true,
        "Hlines Background.color": "rgba(33,150,243,0.1)"
      }
    }
  ]
}

This request generates a chart with the Commodity Channel Index study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Connors RSI',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Connors RSI study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "override": {
    "showMainPane": false                     # Whether to show the main pane or not.
  }
}

#### Studies Section (For Connors RSI):
To include the Connors RSI study, add the following in the `studies` array:
[
  {
    "name": "Connors RSI",                    # The study to add.
    "forceOverlay": false,                    # Whether to force the study to overlay on the main chart.
    "input": {
      "in_0": 3,                              # RSI length (Min: 1, Max: 10000).
      "in_1": 2,                              # Up/down length (Min: 1, Max: 10000).
      "in_2": 100                             # ROC length (Min: 1, Max: 10000).
    },
    "override": {
      "CRSI.linewidth": 1,                    # Line width for the study plot (Min: 1, Max: 10).
      "CRSI.plottype": "line",                # Plot type (e.g., 'line').
      "CRSI.color": "rgb(33,150,243)",        # Plot color in RGB format.
      "UpperLimit.visible": true,              # Whether to show the upper limit line.
      "UpperLimit.linestyle": 2,               # Line style for the upper limit (Min: 0, Max: 2).
      "UpperLimit.linewidth": 1,               # Line width for the upper limit (Min: 1, Max: 10).
      "UpperLimit.value": 70,                  # Value for the upper limit (Min: -1000000, Max: 1000000).
      "UpperLimit.color": "rgb(120,123,134)",  # Color for the upper limit line.
      "LowerLimit.visible": true,              # Whether to show the lower limit line.
      "LowerLimit.linestyle": 2,               # Line style for the lower limit (Min: 0, Max: 2).
      "LowerLimit.linewidth": 1,               # Line width for the lower limit (Min: 1, Max: 10).
      "LowerLimit.value": 30,                  # Value for the lower limit (Min: -1000000, Max: 1000000).
      "LowerLimit.color": "rgb(120,123,134)",  # Color for the lower limit line.
      "Hlines Background.visible": true,       # Whether to show the background for horizontal lines.
      "Hlines Background.color": "rgba(33,150,243,0.1)"  # Background color for horizontal lines.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "override": {
    "showMainPane": false
  },
  "studies": [
    {
      "name": "Connors RSI",
      "forceOverlay": false,
      "input": {
        "in_0": 3,
        "in_1": 2,
        "in_2": 100
      },
      "override": {
        "CRSI.linewidth": 1,
        "CRSI.plottype": "line",
        "CRSI.color": "rgb(33,150,243)",
        "UpperLimit.visible": true,
        "UpperLimit.linestyle": 2,
        "UpperLimit.linewidth": 1,
        "UpperLimit.value": 70,
        "UpperLimit.color": "rgb(120,123,134)",
        "LowerLimit.visible": true,
        "LowerLimit.linestyle": 2,
        "LowerLimit.linewidth": 1,
        "LowerLimit.value": 30,
        "LowerLimit.color": "rgb(120,123,134)",
        "Hlines Background.visible": true,
        "Hlines Background.color": "rgba(33,150,243,0.1)"
      }
    }
  ]
}

This request generates a chart with the Connors RSI study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Coppock Curve',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Coppock Curve study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Coppock Curve):
To include the Coppock Curve study, add the following in the `studies` array:
[
  {
    "name": "Coppock Curve",                   # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "input": {
      "in_0": 10,                              # WMA length (Min: -10000, Max: 5000).
      "in_1": 14,                              # Long ROC length (Min: 1, Max: 4999).
      "in_2": 11                               # Short ROC length (Min: 1, Max: 4999).
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Coppock Curve",
      "forceOverlay": false,
      "input": {
        "in_0": 10,
        "in_1": 14,
        "in_2": 11
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Coppock Curve study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Detrended Price Oscillator',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Detrended Price Oscillator study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "override": {
    "showMainPane": false                     # Whether to show the main pane.
  }
}

#### Studies Section (For Detrended Price Oscillator):
To include the Detrended Price Oscillator study, add the following in the `studies` array:
[
  {
    "name": "Detrended Price Oscillator",     # The study to add.
    "forceOverlay": false,                     # Whether to force the study to overlay the main chart.
    "input": {
      "in_0": 21,                              # Period for the Detrended Price Oscillator (Min: 1, Max: 100000).
      "in_1": false                            # Whether the oscillator is centered.
    },
    "override": {
      "DPO.linewidth": 1,                      # Line width for the Detrended Price Oscillator plot (Min: 1, Max: 10).
      "DPO.plottype": "line",                  # Plot type (e.g., 'line').
      "DPO.color": "rgb(67,160,71)",           # Plot color in RGB format.
      "Zero.visible": true,                     # Whether to show the zero line.
      "Zero.linestyle": 2,                      # Line style for the zero line (Min: 0, Max: 2).
      "Zero.linewidth": 1,                      # Line width for the zero line (Min: 1, Max: 10).
      "Zero.value": 0,                         # Value for the zero line (Min: -1000000, Max: 1000000).
      "Zero.color": "rgb(120,123,134)"         # Color for the zero line in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "override": {
    "showMainPane": false
  },
  "studies": [
    {
      "name": "Detrended Price Oscillator",
      "forceOverlay": false,
      "input": {
        "in_0": 21,
        "in_1": false
      },
      "override": {
        "DPO.linewidth": 1,
        "DPO.plottype": "line",
        "DPO.color": "rgb(67,160,71)",
        "Zero.visible": true,
        "Zero.linestyle": 2,
        "Zero.linewidth": 1,
        "Zero.value": 0,
        "Zero.color": "rgb(120,123,134)"
      }
    }
  ]
}

This request generates a chart with the Detrended Price Oscillator study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Directional Movement',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Directional Movement study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Directional Movement):
To include the Directional Movement study, add the following in the `studies` array:
[
  {
    "name": "Directional Movement",             # The study to add.
    "forceOverlay": false,                      # Prevents overlaying on the main pane.
    "input": {
      "in_0": 14,                               # DI length (Min: 1, Max: 2000).
      "in_1": 14                                # ADX smoothing (Min: 1, Max: 50).
    },
    "override": {
      "+DI.visible": true,                      # Visibility of +DI line.
      "+DI.linewidth": 1,                       # Line width for +DI.
      "+DI.plottype": "line",                   # Plot type for +DI.
      "+DI.color": "rgb(33,150,243)",          # Color for +DI.
      "-DI.visible": true,                      # Visibility of -DI line.
      "-DI.linewidth": 1,                       # Line width for -DI.
      "-DI.plottype": "line",                   # Plot type for -DI.
      "-DI.color": "rgb(255,109,0)",           # Color for -DI.
      "DX.visible": true,                       # Visibility of DX line.
      "DX.linewidth": 1,                        # Line width for DX.
      "DX.plottype": "line",                    # Plot type for DX.
      "DX.color": "rgb(255,167,38)",           # Color for DX.
      "ADX.visible": true,                      # Visibility of ADX line.
      "ADX.linewidth": 1,                       # Line width for ADX.
      "ADX.plottype": "line",                   # Plot type for ADX.
      "ADX.color": "rgb(245,0,87)",            # Color for ADX.
      "ADXR.visible": true,                     # Visibility of ADXR line.
      "ADXR.linewidth": 1,                      # Line width for ADXR.
      "ADXR.plottype": "line",                  # Plot type for ADXR.
      "ADXR.color": "rgb(171,71,188)"          # Color for ADXR.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Directional Movement",
      "forceOverlay": false,
      "input": {
        "in_0": 14,
        "in_1": 14
      },
      "override": {
        "+DI.visible": true,
        "+DI.linewidth": 1,
        "+DI.plottype": "line",
        "+DI.color": "rgb(33,150,243)",
        "-DI.visible": true,
        "-DI.linewidth": 1,
        "-DI.plottype": "line",
        "-DI.color": "rgb(255,109,0)",
        "DX.visible": true,
        "DX.linewidth": 1,
        "DX.plottype": "line",
        "DX.color": "rgb(255,167,38)",
        "ADX.visible": true,
        "ADX.linewidth": 1,
        "ADX.plottype": "line",
        "ADX.color": "rgb(245,0,87)",
        "ADXR.visible": true,
        "ADXR.linewidth": 1,
        "ADXR.plottype": "line",
        "ADXR.color": "rgb(171,71,188)"
      }
    }
  ]
}

This request generates a chart with the Directional Movement study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Donchian Channels',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Donchian Channels study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to force overlay on the chart.
}

#### Studies Section (For Donchian Channels):
To include the Donchian Channels study, add the following in the `studies` array:
[
  {
    "name": "Donchian Channels",               # The study to add.
    "input": {
      "in_0": 20                               # Length for the Donchian Channels.
    },
    "override": {
      "Lower.visible": true,                   # Visibility of the lower band.
      "Lower.linewidth": 1,                    # Line width for the lower band.
      "Lower.plottype": "line",                # Plot type for the lower band.
      "Lower.color": "rgb(33,150,243)",       # Color for the lower band.
      "Upper.visible": true,                   # Visibility of the upper band.
      "Upper.linewidth": 1,                    # Line width for the upper band.
      "Upper.plottype": "line",                # Plot type for the upper band.
      "Upper.color": "rgb(33,150,243)",       # Color for the upper band.
      "Basis.visible": true,                   # Visibility of the basis line.
      "Basis.linewidth": 1,                    # Line width for the basis line.
      "Basis.plottype": "line",                # Plot type for the basis line.
      "Basis.color": "rgb(255,109,0)",        # Color for the basis line.
      "Plots Background.visible": true,        # Visibility of the background plots.
      "Plots Background.color": "rgba(33,150,243,0.1)" # Background color.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Donchian Channels",
      "input": {
        "in_0": 20
      },
      "override": {
        "Lower.visible": true,
        "Lower.linewidth": 1,
        "Lower.plottype": "line",
        "Lower.color": "rgb(33,150,243)",
        "Upper.visible": true,
        "Upper.linewidth": 1,
        "Upper.plottype": "line",
        "Upper.color": "rgb(33,150,243)",
        "Basis.visible": true,
        "Basis.linewidth": 1,
        "Basis.plottype": "line",
        "Basis.color": "rgb(255,109,0)",
        "Plots Background.visible": true,
        "Plots Background.color": "rgba(33,150,243,0.1)"
      }
    }
  ]
}

This request generates a chart with the Donchian Channels study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Double EMA',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Double EMA study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Double EMA):
To include the Double EMA study, add the following in the `studies` array:
[
  {
    "name": "Double EMA",                      # The study to add.
    "input": {
      "in_0": 9                                 # Length for the Double EMA.
    },
    "override": {
      "Plot.linewidth": 1,                      # Line width for the study plot.
      "Plot.plottype": "line",                  # Plot type (e.g., 'line').
      "Plot.color": "rgb(67,160,71)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Double EMA",
      "input": {
        "in_0": 9
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(67,160,71)"
      }
    }
  ]
}

This request generates a chart with the Double EMA study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Ease of Movement',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Ease of Movement study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Ease of Movement):
To include the Ease of Movement study, add the following in the `studies` array:
[
  {
    "name": "Ease of Movement",                # The study to add.
    "forceOverlay": false,                     # Whether to overlay the study on the main chart.
    "input": {
      "in_0": 10000,                           # Divisor (Min: 1, Max: 1000000000).
      "in_1": 14                               # Length (Min: 1, Max: 2000).
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(67,160,71)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Ease of Movement",
      "forceOverlay": false,
      "input": {
        "in_0": 10000,
        "in_1": 14
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(67,160,71)"
      }
    }
  ]
}

This request generates a chart with the Ease of Movement study applied to the specified symbol and interval.
"""
},

 {
  'Elder\'s Force Index': '''This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Elder's Force Index study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to overlay the study on the main pane.
}

#### Studies Section (For Elder's Force Index):
To include the Elder's Force Index study, add the following in the `studies` array:
[
  {
    "name": "Elder's Force Index",             # The study to add.
    "forceOverlay": false,                      # Whether to overlay the study on the main pane.
    "input": {
      "in_0": 13                                # Length for the Elder's Force Index.
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(242,54,69)",          # Plot color in RGB format.
      "Zero.visible": true,                     # Whether to show the zero line.
      "Zero.linestyle": 2,                      # Line style for the zero line.
      "Zero.linewidth": 1,                      # Line width for the zero line.
      "Zero.value": 0,                          # Value for the zero line.
      "Zero.color": "rgb(120,123,134)"         # Color for the zero line in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Elder's Force Index",
      "forceOverlay": false,
      "input": {
        "in_0": 13
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(242,54,69)",
        "Zero.visible": true,
        "Zero.linestyle": 2,
        "Zero.linewidth": 1,
        "Zero.value": 0,
        "Zero.color": "rgb(120,123,134)"
      }
    }
  ]
}

This request generates a chart with the Elder's Force Index study applied to the specified symbol and interval.'''
},

 {
  'indicator name': 'Envelopes',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Envelopes study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to force overlay on the chart.
}

#### Studies Section (For Envelopes):
To include the Envelopes study, add the following in the `studies` array:
[
  {
    "name": "Envelopes",                       # The study to add.
    "input": {
      "in_0": 20,                              # Length (Min: 1, Max: 2000).
      "in_1": 2,                               # Upper percentage (Min: 1, Max: 2000).
      "in_2": 2,                               # Lower percentage (Min: 1, Max: 2000).
      "in_3": "Simple",                        # Method [Simple, Exponential, Weighted].
      "in_4": "close"                          # Source [open, high, low, close, hl2, hlc3, ohlc4].
    },
    "override": {
      "Average.visible": true,                  # Average visibility.
      "Average.linewidth": 1,                   # Average line width (Min: 1, Max: 10).
      "Average.plottype": "line",               # Average plot type (e.g., 'line').
      "Average.color": "rgb(255,109,0)",       # Average color in RGB format.
      "Upper.visible": true,                     # Upper band visibility.
      "Upper.linewidth": 1,                      # Upper band line width (Min: 1, Max: 10).
      "Upper.plottype": "line",                  # Upper band plot type (e.g., 'line').
      "Upper.color": "rgb(33,150,243)",         # Upper band color in RGB format.
      "Lower.visible": true,                     # Lower band visibility.
      "Lower.linewidth": 1,                      # Lower band line width (Min: 1, Max: 10).
      "Lower.plottype": "line",                  # Lower band plot type (e.g., 'line').
      "Lower.color": "rgb(33,150,243)",         # Lower band color in RGB format.
      "Plots Background.visible": true,          # Plots background visibility.
      "Plots Background.color": "rgba(33,150,243,0.1)" # Plots background color in RGBA format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Envelopes",
      "input": {
        "in_0": 20,
        "in_1": 2,
        "in_2": 2,
        "in_3": "Simple",
        "in_4": "close"
      },
      "override": {
        "Average.visible": true,
        "Average.linewidth": 1,
        "Average.plottype": "line",
        "Average.color": "rgb(255,109,0)",
        "Upper.visible": true,
        "Upper.linewidth": 1,
        "Upper.plottype": "line",
        "Upper.color": "rgb(33,150,243)",
        "Lower.visible": true,
        "Lower.linewidth": 1,
        "Lower.plottype": "line",
        "Lower.color": "rgb(33,150,243)",
        "Plots Background.visible": true,
        "Plots Background.color": "rgba(33,150,243,0.1)"
      }
    }
  ]
}

This request generates a chart with the Envelopes study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Fisher Transform',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Fisher Transform study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Fisher Transform):
To include the Fisher Transform study, add the following in the `studies` array:
[
  {
    "name": "Fisher Transform",                 # The study to add.
    "forceOverlay": false,                      # Indicates whether to overlay the study on the main pane.
    "input": {
      "in_0": 9                                  # Length for the Fisher Transform.
    },
    "override": {
      "Fisher.visible": true,                    # Visibility of the Fisher line.
      "Fisher.linewidth": 1,                     # Line width for the Fisher plot.
      "Fisher.plottype": "line",                 # Plot type for the Fisher line.
      "Fisher.color": "rgb(33,150,243)",        # Color for the Fisher line in RGB format.
      "Trigger.visible": true,                    # Visibility of the Trigger line.
      "Trigger.linewidth": 1,                     # Line width for the Trigger plot.
      "Trigger.plottype": "line",                 # Plot type for the Trigger line.
      "Trigger.color": "rgb(255,109,0)",        # Color for the Trigger line in RGB format.
      "Level0.visible": true,                     # Visibility of Level 0 line.
      "Level0.linestyle": 2,                      # Line style for Level 0.
      "Level0.linewidth": 1,                      # Line width for Level 0.
      "Level0.value": 1.5,                        # Value for Level 0.
      "Level0.color": "rgb(233,30,99)",         # Color for Level 0 line in RGB format.
      "Level1.visible": true,                     # Visibility of Level 1 line.
      "Level1.linestyle": 2,                      # Line style for Level 1.
      "Level1.linewidth": 1,                      # Line width for Level 1.
      "Level1.value": 0.75,                       # Value for Level 1.
      "Level1.color": "rgb(120,123,134)",       # Color for Level 1 line in RGB format.
      "Level2.visible": true,                     # Visibility of Level 2 line.
      "Level2.linestyle": 2,                      # Line style for Level 2.
      "Level2.linewidth": 1,                      # Line width for Level 2.
      "Level2.value": 0,                          # Value for Level 2.
      "Level2.color": "rgb(233,30,99)",         # Color for Level 2 line in RGB format.
      "Level3.visible": true,                     # Visibility of Level 3 line.
      "Level3.linestyle": 2,                      # Line style for Level 3.
      "Level3.linewidth": 1,                      # Line width for Level 3.
      "Level3.value": -0.75,                      # Value for Level 3.
      "Level3.color": "rgb(120,123,134)",       # Color for Level 3 line in RGB format.
      "Level4.visible": true,                     # Visibility of Level 4 line.
      "Level4.linestyle": 2,                      # Line style for Level 4.
      "Level4.linewidth": 1,                      # Line width for Level 4.
      "Level4.value": -1.5,                       # Value for Level 4.
      "Level4.color": "rgb(233,30,99)"          # Color for Level 4 line in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Fisher Transform",
      "forceOverlay": false,
      "input": {
        "in_0": 9
      },
      "override": {
        "Fisher.visible": true,
        "Fisher.linewidth": 1,
        "Fisher.plottype": "line",
        "Fisher.color": "rgb(33,150,243)",
        "Trigger.visible": true,
        "Trigger.linewidth": 1,
        "Trigger.plottype": "line",
        "Trigger.color": "rgb(255,109,0)",
        "Level0.visible": true,
        "Level0.linestyle": 2,
        "Level0.linewidth": 1,
        "Level0.value": 1.5,
        "Level0.color": "rgb(233,30,99)",
        "Level1.visible": true,
        "Level1.linestyle": 2,
        "Level1.linewidth": 1,
        "Level1.value": 0.75,
        "Level1.color": "rgb(120,123,134)",
        "Level2.visible": true,
        "Level2.linestyle": 2,
        "Level2.linewidth": 1,
        "Level2.value": 0,
        "Level2.color": "rgb(233,30,99)",
        "Level3.visible": true,
        "Level3.linestyle": 2,
        "Level3.linewidth": 1,
        "Level3.value": -0.75,
        "Level3.color": "rgb(120,123,134)",
        "Level4.visible": true,
        "Level4.linestyle": 2,
        "Level4.linewidth": 1,
        "Level4.value": -1.5,
        "Level4.color": "rgb(233,30,99)"
      }
    }
  ]
}

This request generates a chart with the Fisher Transform study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Historical Volatility',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Historical Volatility study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Historical Volatility):
To include the Historical Volatility study, add the following in the `studies` array:
[
  {
    "name": "Historical Volatility",           # The study to add.
    "forceOverlay": false,                     # Whether to overlay the study on the main pane.
    "input": {
      "in_0": 10                               # Length for the historical volatility calculation (Min: 1, Max: 100000).
    },
    "override": {
      "Plot.linewidth": 1,                    # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"         # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 300,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Historical Volatility",
      "forceOverlay": false,
      "input": {
        "in_0": 10
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Historical Volatility study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Hull Moving Average',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Hull Moving Average study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Hull Moving Average):
To include the Hull Moving Average study, add the following in the `studies` array:
[
  {
    "name": "Hull Moving Average",             # The study to add.
    "input": {
      "in_0": 9                                 # Length for the Hull Moving Average.
    },
    "override": {
      "Plot.linewidth": 1,                      # Line width for the study plot.
      "Plot.plottype": "line",                  # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Hull Moving Average",
      "input": {
        "in_0": 9
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Hull Moving Average study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Ichimoku Cloud',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Ichimoku Cloud study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to force overlay on the chart.
}

#### Studies Section (For Ichimoku Cloud):
To include the Ichimoku Cloud study, add the following in the `studies` array:
[
  {
    "name": "Ichimoku Cloud",                  # The study to add.
    "input": {
      "in_0": 9,                               # Conversion line periods.
      "in_1": 26,                              # Base line periods.
      "in_2": 52,                              # Leading span B.
      "in_3": 26                               # Lagging span.
    },
    "override": {
      "ConversionLine.visible": true,          # Visibility of the conversion line.
      "ConversionLine.linewidth": 1,           # Line width for the conversion line.
      "ConversionLine.plottype": "line",       # Plot type for the conversion line.
      "ConversionLine.color": "rgb(33,150,243)", # Color for the conversion line.
      "BaseLine.visible": true,                 # Visibility of the base line.
      "BaseLine.linewidth": 1,                  # Line width for the base line.
      "BaseLine.plottype": "line",              # Plot type for the base line.
      "BaseLine.color": "rgb(128,25,34)",      # Color for the base line.
      "LaggingSpan.visible": true,              # Visibility of the lagging span.
      "LaggingSpan.linewidth": 1,               # Line width for the lagging span.
      "LaggingSpan.plottype": "line",           # Plot type for the lagging span.
      "LaggingSpan.color": "rgb(67,160,71)",   # Color for the lagging span.
      "LeadingSpanA.visible": true,             # Visibility of leading span A.
      "LeadingSpanA.linewidth": 1,              # Line width for leading span A.
      "LeadingSpanA.plottype": "line",          # Plot type for leading span A.
      "LeadingSpanA.color": "rgb(165,214,167)", # Color for leading span A.
      "LeadingSpanB.visible": true,             # Visibility of leading span B.
      "LeadingSpanB.linewidth": 1,              # Line width for leading span B.
      "LeadingSpanB.plottype": "line",          # Plot type for leading span B.
      "LeadingSpanB.color": "rgb(250,161,164)", # Color for leading span B.
      "Plots Background.visible": true,         # Visibility of the plots background.
      "Plots Background.transparency": 90       # Background opacity.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Ichimoku Cloud",
      "input": {
        "in_0": 9,
        "in_1": 26,
        "in_2": 52,
        "in_3": 26
      },
      "override": {
        "ConversionLine.visible": true,
        "ConversionLine.linewidth": 1,
        "ConversionLine.plottype": "line",
        "ConversionLine.color": "rgb(33,150,243)",
        "BaseLine.visible": true,
        "BaseLine.linewidth": 1,
        "BaseLine.plottype": "line",
        "BaseLine.color": "rgb(128,25,34)",
        "LaggingSpan.visible": true,
        "LaggingSpan.linewidth": 1,
        "LaggingSpan.plottype": "line",
        "LaggingSpan.color": "rgb(67,160,71)",
        "LeadingSpanA.visible": true,
        "LeadingSpanA.linewidth": 1,
        "LeadingSpanA.plottype": "line",
        "LeadingSpanA.color": "rgb(165,214,167)",
        "LeadingSpanB.visible": true,
        "LeadingSpanB.linewidth": 1,
        "LeadingSpanB.plottype": "line",
        "LeadingSpanB.color": "rgb(250,161,164)",
        "Plots Background.visible": true,
        "Plots Background.transparency": 90
      }
    }
  ]
}

This request generates a chart with the Ichimoku Cloud study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Keltner Channels',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Keltner Channels study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to force overlay on the chart.
}

#### Studies Section (For Keltner Channels):
To include the Keltner Channels study, add the following in the `studies` array:
[
  {
    "name": "Keltner Channels",                # The study to add.
    "input": {
      "in_0": true,                            # Use true range.
      "in_1": 20,                              # Length (Min: 1, Max: 2000).
      "in_2": 1                                # Mult (Min: -100000, Max: 100000).
    },
    "override": {
      "Upper.visible": true,                   # Upper band visibility.
      "Upper.linewidth": 1,                    # Upper band line width (Min: 1, Max: 10).
      "Upper.plottype": "line",                # Upper band plot type (e.g., 'line').
      "Upper.color": "rgb(33,150,243)",        # Upper band color in RGB format.
      "Middle.visible": true,                   # Middle band visibility.
      "Middle.linewidth": 1,                    # Middle band line width (Min: 1, Max: 10).
      "Middle.plottype": "line",                # Middle band plot type (e.g., 'line').
      "Middle.color": "rgb(33,150,243)",       # Middle band color in RGB format.
      "Lower.visible": true,                    # Lower band visibility.
      "Lower.linewidth": 1,                     # Lower band line width (Min: 1, Max: 10).
      "Lower.plottype": "line",                 # Lower band plot type (e.g., 'line').
      "Lower.color": "rgb(33,150,243)",        # Lower band color in RGB format.
      "Plots Background.visible": true,         # Background visibility.
      "Plots Background.color": "rgba(33,150,243,0.1)" # Background color in RGBA format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Keltner Channels",
      "input": {
        "in_0": true,
        "in_1": 20,
        "in_2": 1
      },
      "override": {
        "Upper.visible": true,
        "Upper.linewidth": 1,
        "Upper.plottype": "line",
        "Upper.color": "rgb(33,150,243)",
        "Middle.visible": true,
        "Middle.linewidth": 1,
        "Middle.plottype": "line",
        "Middle.color": "rgb(33,150,243)",
        "Lower.visible": true,
        "Lower.linewidth": 1,
        "Lower.plottype": "line",
        "Lower.color": "rgb(33,150,243)",
        "Plots Background.visible": true,
        "Plots Background.color": "rgba(33,150,243,0.1)"
      }
    }
  ]
}

This request generates a chart with the Keltner Channels study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Klinger Oscillator',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Klinger Oscillator study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Klinger Oscillator):
To include the Klinger Oscillator study, add the following in the `studies` array:
[
  {
    "name": "Klinger Oscillator",               # The study to add.
    "forceOverlay": false,                      # Indicates whether to overlay the study on the main chart.
    "override": {
      "Plot.visible": true,                     # Visibility of the main plot.
      "Plot.linewidth": 1,                      # Line width for the study plot.
      "Plot.plottype": "line",                  # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)",         # Plot color in RGB format.
      "Signal.visible": true,                   # Visibility of the signal plot.
      "Signal.linewidth": 1,                    # Line width for the signal plot.
      "Signal.plottype": "line",                # Signal plot type (e.g., 'line').
      "Signal.color": "rgb(67,160,71)"         # Signal plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Klinger Oscillator",
      "forceOverlay": false,
      "override": {
        "Plot.visible": true,
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)",
        "Signal.visible": true,
        "Signal.linewidth": 1,
        "Signal.plottype": "line",
        "Signal.color": "rgb(67,160,71)"
      }
    }
  ]
}

This request generates a chart with the Klinger Oscillator study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Know Sure Thing',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Know Sure Thing study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "override": {
    "showMainPane": false                     # Whether to show the main pane or not.
  }
}

#### Studies Section (For Know Sure Thing):
To include the Know Sure Thing study, add the following in the `studies` array:
[
  {
    "name": "Know Sure Thing",                 # The study to add.
    "forceOverlay": false,                     # Whether to force the study to overlay on the main chart.
    "input": {
      "in_0": 10,                              # roclen1 (Min: 1, Max: 2000).
      "in_1": 15,                              # roclen2 (Min: 1, Max: 2000).
      "in_2": 20,                              # roclen3 (Min: 1, Max: 2000).
      "in_3": 30,                              # roclen4 (Min: 1, Max: 2000).
      "in_4": 10,                              # smalen1 (Min: 1, Max: 2000).
      "in_5": 10,                              # smalen2 (Min: 1, Max: 2000).
      "in_6": 10,                              # smalen3 (Min: 1, Max: 2000).
      "in_7": 15,                              # smalen4 (Min: 1, Max: 2000).
      "in_8": 9                                # siglen (Min: 1, Max: 2000).
    },
    "override": {
      "KST.visible": true,                     # Whether the KST line is visible.
      "KST.linewidth": 1,                      # Line width for the KST plot (Min: 1, Max: 10).
      "KST.plottype": "line",                  # Plot type for KST (e.g., 'line').
      "KST.color": "rgb(8,153,129)",           # Plot color for KST in RGB format.
      "Signal.visible": true,                   # Whether the Signal line is visible.
      "Signal.linewidth": 1,                    # Line width for the Signal plot (Min: 1, Max: 10).
      "Signal.plottype": "line",                # Plot type for Signal (e.g., 'line').
      "Signal.color": "rgb(242,54,69)",        # Plot color for Signal in RGB format.
      "Zero.visible": true,                     # Whether the Zero line is visible.
      "Zero.linestyle": 2,                      # Line style for Zero (Min: 0, Max: 2).
      "Zero.linewidth": 1,                      # Line width for the Zero line (Min: 1, Max: 10).
      "Zero.value": 0,                         # Value for the Zero line (Min: -1000000, Max: 1000000).
      "Zero.color": "rgb(120,123,134)"         # Plot color for Zero in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "override": {
    "showMainPane": false
  },
  "studies": [
    {
      "name": "Know Sure Thing",
      "forceOverlay": false,
      "input": {
        "in_0": 10,
        "in_1": 15,
        "in_2": 20,
        "in_3": 30,
        "in_4": 10,
        "in_5": 10,
        "in_6": 10,
        "in_7": 15,
        "in_8": 9
      },
      "override": {
        "KST.visible": true,
        "KST.linewidth": 1,
        "KST.plottype": "line",
        "KST.color": "rgb(8,153,129)",
        "Signal.visible": true,
        "Signal.linewidth": 1,
        "Signal.plottype": "line",
        "Signal.color": "rgb(242,54,69)",
        "Zero.visible": true,
        "Zero.linestyle": 2,
        "Zero.linewidth": 1,
        "Zero.value": 0,
        "Zero.color": "rgb(120,123,134)"
      }
    }
  ]
}

This request generates a chart with the Know Sure Thing study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Least Squares Moving Average',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Least Squares Moving Average study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Least Squares Moving Average):
To include the Least Squares Moving Average study, add the following in the `studies` array:
[
  {
    "name": "Least Squares Moving Average",    # The study to add.
    "input": {
      "in_0": 25,                              # Length of the moving average (Min: 1, Max: 100000).
      "in_1": 0                                # Offset (Min: -100000, Max: 100000).
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Least Squares Moving Average",
      "input": {
        "in_0": 25,
        "in_1": 0
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Least Squares Moving Average study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Linear Regression Curve',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Linear Regression Curve study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlay on the chart.
}

#### Studies Section (For Linear Regression Curve):
To include the Linear Regression Curve study, add the following in the `studies` array:
[
  {
    "name": "Linear Regression Curve",        # The study to add.
    "input": {
      "in_0": 9                               # Look-back period for the regression curve.
    },
    "override": {
      "Plot.linewidth": 1,                    # Line width for the study plot.
      "Plot.plottype": "line",                # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"         # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Linear Regression Curve",
      "input": {
        "in_0": 9
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Linear Regression Curve study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Linear Regression Slope',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Linear Regression Slope study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Linear Regression Slope):
To include the Linear Regression Slope study, add the following in the `studies` array:
[
  {
    "name": "Linear Regression Slope",         # The study to add.
    "forceOverlay": false,                     # Whether to force the study to overlay on the main pane.
    "input": {
      "periods": 14                            # Look-back period for the slope.
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(255,82,82)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Linear Regression Slope",
      "forceOverlay": false,
      "input": {
        "periods": 14
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(255,82,82)"
      }
    }
  ]
}

This request generates a chart with the Linear Regression Slope study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'MA Cross',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the MA Cross study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to force overlaying the chart.
}

#### Studies Section (For MA Cross):
To include the MA Cross study, add the following in the `studies` array:
[
  {
    "name": "MA Cross",                        # The study to add.
    "input": {
      "in_0": 9,                               # Short moving average period.
      "in_1": 26                               # Long moving average period.
    },
    "override": {
      "PlotShort.visible": true,               # Visibility of the short moving average plot.
      "PlotShort.linewidth": 1,                # Line width for the short moving average plot.
      "PlotShort.plottype": "line",            # Plot type for the short moving average.
      "PlotShort.color": "rgb(67,160,71)",    # Color for the short moving average plot.
      "PlotLong.visible": true,                 # Visibility of the long moving average plot.
      "PlotLong.linewidth": 1,                  # Line width for the long moving average plot.
      "PlotLong.plottype": "line",              # Plot type for the long moving average.
      "PlotLong.color": "rgb(255,109,0)",      # Color for the long moving average plot.
      "PlotCrosses.visible": true,              # Visibility of the crosses plot.
      "PlotCrosses.linewidth": 4,               # Line width for the crosses plot.
      "PlotCrosses.plottype": "cross",          # Plot type for the crosses.
      "PlotCrosses.color": "rgb(33,150,243)"   # Color for the crosses plot.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "MA Cross",
      "input": {
        "in_0": 9,
        "in_1": 26
      },
      "override": {
        "PlotShort.visible": true,
        "PlotShort.linewidth": 1,
        "PlotShort.plottype": "line",
        "PlotShort.color": "rgb(67,160,71)",
        "PlotLong.visible": true,
        "PlotLong.linewidth": 1,
        "PlotLong.plottype": "line",
        "PlotLong.color": "rgb(255,109,0)",
        "PlotCrosses.visible": true,
        "PlotCrosses.linewidth": 4,
        "PlotCrosses.plottype": "cross",
        "PlotCrosses.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the MA Cross study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'MA with EMA Cross',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the MA with EMA Cross study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to force overlay on the chart.
}

#### Studies Section (For MA with EMA Cross):
To include the MA with EMA Cross study, add the following in the `studies` array:
[
  {
    "name": "MA with EMA Cross",               # The study to add.
    "input": {
      "in_0": 10,                              # MA length (Min: 1, Max: 2000).
      "in_1": 10                               # EMA length (Min: 1, Max: 2000).
    },
    "override": {
      "MA.visible": true,                      # Visibility of the MA.
      "MA.linewidth": 1,                       # Line width for the MA plot (Min: 1, Max: 10).
      "MA.plottype": "line",                   # Plot type for the MA (e.g., 'line').
      "MA.color": "rgb(255,109,0)",            # MA color in RGB format.
      "EMA.visible": true,                      # Visibility of the EMA.
      "EMA.linewidth": 1,                       # Line width for the EMA plot (Min: 1, Max: 10).
      "EMA.plottype": "line",                   # Plot type for the EMA (e.g., 'line').
      "EMA.color": "rgb(67,160,71)",           # EMA color in RGB format.
      "Crosses.visible": true,                  # Visibility of the crosses.
      "Crosses.linewidth": 4,                   # Line width for the crosses (Min: 1, Max: 10).
      "Crosses.plottype": "cross",              # Plot type for the crosses (e.g., 'cross').
      "Crosses.color": "rgb(33,150,243)"       # Crosses color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "MA with EMA Cross",
      "input": {
        "in_0": 10,
        "in_1": 10
      },
      "override": {
        "MA.visible": true,
        "MA.linewidth": 1,
        "MA.plottype": "line",
        "MA.color": "rgb(255,109,0)",
        "EMA.visible": true,
        "EMA.linewidth": 1,
        "EMA.plottype": "line",
        "EMA.color": "rgb(67,160,71)",
        "Crosses.visible": true,
        "Crosses.linewidth": 4,
        "Crosses.plottype": "cross",
        "Crosses.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the MA with EMA Cross study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'MACD',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the MACD study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "override": {
    "showMainPane": false                     # Whether to show the main pane.
  }
}

#### Studies Section (For MACD):
To include the MACD study, add the following in the `studies` array:
[
  {
    "name": "MACD",                           # The study to add.
    "forceOverlay": false,                    # Whether to force overlay on the main chart.
    "input": {
      "in_0": 12,                             # Fast length (Min: 1, Max: 2000).
      "in_1": 26,                             # Slow length (Min: 1, Max: 2000).
      "in_2": 9,                              # Signal length (Min: 1, Max: 50).
      "in_3": "close"                         # Source [open, high, low, close, hl2, hlc3, ohlc4].
    },
    "override": {
      "Histogram.visible": true,              # Whether to show the histogram.
      "Histogram.plottype": "columns",        # Plot type for histogram.
      "Histogram.color.0": "rgb(34,171,148)",# Color for histogram bars.
      "Histogram.color.1": "rgb(172,229,220)",# Color for histogram bars.
      "Histogram.color.2": "rgb(252,203,205)",# Color for histogram bars.
      "Histogram.color.3": "rgb(255,82,82)", # Color for histogram bars.
      "MACD.visible": true,                   # Whether to show the MACD line.
      "MACD.linewidth": 1,                    # Line width for the MACD line.
      "MACD.plottype": "line",                # Plot type for MACD line.
      "MACD.color": "rgb(33,150,243)",       # Color for MACD line.
      "Signal.visible": true,                 # Whether to show the Signal line.
      "Signal.linewidth": 1,                  # Line width for the Signal line.
      "Signal.plottype": "line",              # Plot type for Signal line.
      "Signal.color": "rgb(255,109,0)"       # Color for Signal line.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "override": {
    "showMainPane": false
  },
  "studies": [
    {
      "name": "MACD",
      "forceOverlay": false,
      "input": {
        "in_0": 12,
        "in_1": 26,
        "in_2": 9,
        "in_3": "close"
      },
      "override": {
        "Histogram.visible": true,
        "Histogram.plottype": "columns",
        "Histogram.color.0": "rgb(34,171,148)",
        "Histogram.color.1": "rgb(172,229,220)",
        "Histogram.color.2": "rgb(252,203,205)",
        "Histogram.color.3": "rgb(255,82,82)",
        "MACD.visible": true,
        "MACD.linewidth": 1,
        "MACD.plottype": "line",
        "MACD.color": "rgb(33,150,243)",
        "Signal.visible": true,
        "Signal.linewidth": 1,
        "Signal.plottype": "line",
        "Signal.color": "rgb(255,109,0)"
      }
    }
  ]
}

This request generates a chart with the MACD study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Majority Rule',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Majority Rule study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Majority Rule):
To include the Majority Rule study, add the following in the `studies` array:
[
  {
    "name": "Majority Rule",                   # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main pane.
    "input": {
      "rollingPeriod": 14                       # Rolling period for the Majority Rule.
    },
    "override": {
      "Majority Rule.linewidth": 1,            # Line width for the study plot.
      "Majority Rule.plottype": "line",        # Plot type (e.g., 'line').
      "Majority Rule.color": "rgb(255,82,82)"  # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Majority Rule",
      "forceOverlay": false,
      "input": {
        "rollingPeriod": 14
      },
      "override": {
        "Majority Rule.linewidth": 1,
        "Majority Rule.plottype": "line",
        "Majority Rule.color": "rgb(255,82,82)"
      }
    }
  ]
}

This request generates a chart with the Majority Rule study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Mass Index',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Mass Index study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Mass Index):
To include the Mass Index study, add the following in the `studies` array:
[
  {
    "name": "Mass Index",                      # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main pane.
    "input": {
      "in_0": 10                               # Length for the Mass Index calculation.
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Mass Index",
      "forceOverlay": false,
      "input": {
        "in_0": 10
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Mass Index study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'McGinley Dynamic',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the McGinley Dynamic study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For McGinley Dynamic):
To include the McGinley Dynamic study, add the following in the `studies` array:
[
  {
    "name": "McGinley Dynamic",                # The study to add.
    "input": {
      "in_0": 10                               # Length for the McGinley Dynamic.
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "McGinley Dynamic",
      "input": {
        "in_0": 10
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the McGinley Dynamic study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Momentum',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Momentum study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Momentum):
To include the Momentum study, add the following in the `studies` array:
[
  {
    "name": "Momentum",                        # The study to add.
    "forceOverlay": false,                     # Whether to overlay the study on the main pane.
    "input": {
      "in_0": 10,                              # Length for the momentum calculation (Min: 1, Max: 1000).
      "in_1": "close"                          # Source for the momentum calculation [open, high, low, close, hl2, hlc3, ohlc4].
    },
    "override": {
      "Mom.linewidth": 1,                      # Line width for the study plot (Min: 1, Max: 10).
      "Mom.plottype": "line",                  # Plot type (e.g., 'line').
      "Mom.color": "rgb(33,150,243)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Momentum",
      "forceOverlay": false,
      "input": {
        "in_0": 10,
        "in_1": "close"
      },
      "override": {
        "Mom.linewidth": 1,
        "Mom.plottype": "line",
        "Mom.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Momentum study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Money Flow Index',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Money Flow Index study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Money Flow Index):
To include the Money Flow Index study, add the following in the `studies` array:
[
  {
    "name": "Money Flow Index",                # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "input": {
      "in_0": 14                               # Look-back period for the Money Flow Index.
    },
    "override": {
      "Plot.linewidth": 1,                    # Line width for the study plot.
      "Plot.plottype": "line",                # Plot type (e.g., 'line').
      "Plot.color": "rgb(126,87,194)",        # Plot color in RGB format.
      "UpperLimit.visible": true,              # Visibility of the upper limit line.
      "UpperLimit.linestyle": 2,               # Line style for the upper limit.
      "UpperLimit.linewidth": 1,               # Line width for the upper limit.
      "UpperLimit.value": 80,                  # Value for the upper limit.
      "UpperLimit.color": "rgb(120,123,134)",  # Color for the upper limit line.
      "LowerLimit.visible": true,               # Visibility of the lower limit line.
      "LowerLimit.linestyle": 2,               # Line style for the lower limit.
      "LowerLimit.linewidth": 1,               # Line width for the lower limit.
      "LowerLimit.value": 20,                  # Value for the lower limit.
      "LowerLimit.color": "rgb(120,123,134)",  # Color for the lower limit line.
      "Hlines Background.visible": true,       # Visibility of the background for horizontal lines.
      "Hlines Background.color": "rgba(126,87,194,0.1)" # Background color for horizontal lines.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Money Flow Index",
      "forceOverlay": false,
      "input": {
        "in_0": 14
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(126,87,194)",
        "UpperLimit.visible": true,
        "UpperLimit.linestyle": 2,
        "UpperLimit.linewidth": 1,
        "UpperLimit.value": 80,
        "UpperLimit.color": "rgb(120,123,134)",
        "LowerLimit.visible": true,
        "LowerLimit.linestyle": 2,
        "LowerLimit.linewidth": 1,
        "LowerLimit.value": 20,
        "LowerLimit.color": "rgb(120,123,134)",
        "Hlines Background.visible": true,
        "Hlines Background.color": "rgba(126,87,194,0.1)"
      }
    }
  ]
}

This request generates a chart with the Money Flow Index study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Moving Average',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Moving Average study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Moving Average):
To include the Moving Average study, add the following in the `studies` array:
[
  {
    "name": "Moving Average",                  # The study to add.
    "input": {
      "length": 9,                             # Length of the moving average (Min: 1, Max: 10000).
      "source": "close",                       # Source for the moving average [open, high, low, close, hl2, hlc3, ohlc4].
      "offset": 0,                             # Offset (Min: -10000, Max: 10000).
      "smoothingLine": "SMA",                  # Smoothing line type [SMA, EMA, WMA].
      "smoothingLength": 9                      # Smoothing length (Min: 1, Max: 10000).
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Moving Average",
      "input": {
        "length": 9,
        "source": "close",
        "offset": 0,
        "smoothingLine": "SMA",
        "smoothingLength": 9
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Moving Average study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Moving Average Adaptive',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Moving Average Adaptive study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Moving Average Adaptive):
To include the Moving Average Adaptive study, add the following in the `studies` array:
[
  {
    "name": "Moving Average Adaptive",         # The study to add.
    "input": {
      "periods": 10                            # Periods for the moving average (Min: 2, Max: 10000).
    },
    "override": {
      "Plot 1.linewidth": 1,                   # Line width for the study plot (Min: 1, Max: 10).
      "Plot 1.plottype": "line",               # Plot type (e.g., 'line').
      "Plot 1.color": "rgb(171,71,188)"       # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Moving Average Adaptive",
      "input": {
        "periods": 10
      },
      "override": {
        "Plot 1.linewidth": 1,
        "Plot 1.plottype": "line",
        "Plot 1.color": "rgb(171,71,188)"
      }
    }
  ]
}

This request generates a chart with the Moving Average Adaptive study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Moving Average Channel',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Moving Average Channel study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlay on the chart.
}

#### Studies Section (For Moving Average Channel):
To include the Moving Average Channel study, add the following in the `studies` array:
[
  {
    "name": "Moving Average Channel",          # The study to add.
    "input": {
      "in_0": 20,                              # Upper length (Min: 1, Max: 10000).
      "in_1": 20,                              # Lower length (Min: 1, Max: 10000).
      "in_2": 0,                               # Upper offset (Min: -10000, Max: 10000).
      "in_3": 0                                # Lower offset (Min: -10000, Max: 10000).
    },
    "override": {
      "Upper.visible": true,                   # Whether the upper line is visible.
      "Upper.linewidth": 1,                    # Line width for the upper line (Min: 1, Max: 10).
      "Upper.plottype": "line",                # Plot type for the upper line (e.g., 'line').
      "Upper.color": "rgb(33,150,243)",        # Plot color for the upper line in RGB format.
      "Lower.visible": true,                   # Whether the lower line is visible.
      "Lower.linewidth": 1,                    # Line width for the lower line (Min: 1, Max: 10).
      "Lower.plottype": "line",                # Plot type for the lower line (e.g., 'line').
      "Lower.color": "rgb(255,109,0)",         # Plot color for the lower line in RGB format.
      "Plots Background.visible": true,        # Whether the background is visible.
      "Plots Background.color": "rgba(33,150,243,0.1)" # Background color in RGBA format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Moving Average Channel",
      "input": {
        "in_0": 20,
        "in_1": 20,
        "in_2": 0,
        "in_3": 0
      },
      "override": {
        "Upper.visible": true,
        "Upper.linewidth": 1,
        "Upper.plottype": "line",
        "Upper.color": "rgb(33,150,243)",
        "Lower.visible": true,
        "Lower.linewidth": 1,
        "Lower.plottype": "line",
        "Lower.color": "rgb(255,109,0)",
        "Plots Background.visible": true,
        "Plots Background.color": "rgba(33,150,243,0.1)"
      }
    }
  ]
}

This request generates a chart with the Moving Average Channel study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Moving Average Double',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Moving Average Double study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Moving Average Double):
To include the Moving Average Double study, add the following in the `studies` array:
[
  {
    "name": "Moving Average Double",           # The study to add.
    "input": {
      "firstPeriods": 14,                       # 1st period (Min: 1, Max: 10000).
      "secondPeriods": 21,                      # 2nd period (Min: 1, Max: 10000).
      "method": "Simple"                        # Method [Simple, Exponential, Weighted].
    },
    "override": {
      "Plot 1.linewidth": 1,                    # Line width for the first plot (Min: 1, Max: 10).
      "Plot 1.plottype": "line",                # Plot type for the first plot (e.g., 'line').
      "Plot 1.color": "rgb(255,109,0)",        # Plot color for the first plot in RGB format.
      "Plot 2.linewidth": 1,                    # Line width for the second plot (Min: 1, Max: 10).
      "Plot 2.plottype": "line",                # Plot type for the second plot (e.g., 'line').
      "Plot 2.color": "rgb(33,150,243)"         # Plot color for the second plot in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Moving Average Double",
      "input": {
        "firstPeriods": 14,
        "secondPeriods": 21,
        "method": "Simple"
      },
      "override": {
        "Plot 1.linewidth": 1,
        "Plot 1.plottype": "line",
        "Plot 1.color": "rgb(255,109,0)",
        "Plot 2.linewidth": 1,
        "Plot 2.plottype": "line",
        "Plot 2.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Moving Average Double study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Moving Average Exponential',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Moving Average Exponential study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Moving Average Exponential):
To include the Moving Average Exponential study, add the following in the `studies` array:
[
  {
    "name": "Moving Average Exponential",      # The study to add.
    "input": {
      "length": 9,                             # Length of the moving average.
      "source": "close",                       # Source for the moving average.
      "offset": 0,                             # Offset for the moving average.
      "smoothingLine": "SMA",                  # Smoothing line type.
      "smoothingLength": 9                     # Smoothing length.
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Moving Average Exponential",
      "input": {
        "length": 9,
        "source": "close",
        "offset": 0,
        "smoothingLine": "SMA",
        "smoothingLength": 9
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Moving Average Exponential study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Moving Average Hamming',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Moving Average Hamming study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Moving Average Hamming):
To include the Moving Average Hamming study, add the following in the `studies` array:
[
  {
    "name": "Moving Average Hamming",          # The study to add.
    "input": {
      "periods": 10                             # Period for the moving average (Min: 1, Max: 10000).
    },
    "override": {
      "Plot 1.linewidth": 1,                    # Line width for the study plot (Min: 1, Max: 10).
      "Plot 1.plottype": "line",                # Plot type (e.g., 'line').
      "Plot 1.color": "rgb(76,175,80)"         # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Moving Average Hamming",
      "input": {
        "periods": 10
      },
      "override": {
        "Plot 1.linewidth": 1,
        "Plot 1.plottype": "line",
        "Plot 1.color": "rgb(76,175,80)"
      }
    }
  ]
}

This request generates a chart with the Moving Average Hamming study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Moving Average Multiple',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Moving Average Multiple study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to force overlay on the chart.
}

#### Studies Section (For Moving Average Multiple):
To include the Moving Average Multiple study, add the following in the `studies` array:
[
  {
    "name": "Moving Average Multiple",         # The study to add.
    "input": {
      "firstPeriods": 14,                      # 1st period (Min: 1, Max: 10000).
      "secondPeriods": 21,                     # 2nd Period (Min: 1, Max: 10000).
      "thirdPeriods": 35,                      # 3rd Period (Min: 1, Max: 10000).
      "fourthPeriods": 50,                     # 4th Period (Min: 1, Max: 10000).
      "fifthPeriods": 100,                     # 5th Period (Min: 1, Max: 10000).
      "sixthPeriods": 200,                     # 6th Period (Min: 1, Max: 10000).
      "method": "Simple"                       # Method [Simple, Exponential, Weighted].
    },
    "override": {
      "Plot 1.linewidth": 1,                   # Line width for the first plot.
      "Plot 1.plottype": "line",               # Plot type for the first plot.
      "Plot 1.color": "rgb(156,39,176)",      # Plot color for the first plot.
      "Plot 2.linewidth": 1,                   # Line width for the second plot.
      "Plot 2.plottype": "line",               # Plot type for the second plot.
      "Plot 2.color": "rgb(255,109,0)",       # Plot color for the second plot.
      "Plot 3.linewidth": 1,                   # Line width for the third plot.
      "Plot 3.plottype": "line",               # Plot type for the third plot.
      "Plot 3.color": "rgb(67,160,71)",       # Plot color for the third plot.
      "Plot 4.linewidth": 1,                   # Line width for the fourth plot.
      "Plot 4.plottype": "line",               # Plot type for the fourth plot.
      "Plot 4.color": "rgb(38,198,218)",      # Plot color for the fourth plot.
      "Plot 5.linewidth": 1,                   # Line width for the fifth plot.
      "Plot 5.plottype": "line",               # Plot type for the fifth plot.
      "Plot 5.color": "rgb(245,0,87)",        # Plot color for the fifth plot.
      "Plot 6.linewidth": 1,                   # Line width for the sixth plot.
      "Plot 6.plottype": "line",               # Plot type for the sixth plot.
      "Plot 6.color": "rgb(33,150,243)"       # Plot color for the sixth plot.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Moving Average Multiple",
      "input": {
        "firstPeriods": 14,
        "secondPeriods": 21,
        "thirdPeriods": 35,
        "fourthPeriods": 50,
        "fifthPeriods": 100,
        "sixthPeriods": 200,
        "method": "Simple"
      },
      "override": {
        "Plot 1.linewidth": 1,
        "Plot 1.plottype": "line",
        "Plot 1.color": "rgb(156,39,176)",
        "Plot 2.linewidth": 1,
        "Plot 2.plottype": "line",
        "Plot 2.color": "rgb(255,109,0)",
        "Plot 3.linewidth": 1,
        "Plot 3.plottype": "line",
        "Plot 3.color": "rgb(67,160,71)",
        "Plot 4.linewidth": 1,
        "Plot 4.plottype": "line",
        "Plot 4.color": "rgb(38,198,218)",
        "Plot 5.linewidth": 1,
        "Plot 5.plottype": "line",
        "Plot 5.color": "rgb(245,0,87)",
        "Plot 6.linewidth": 1,
        "Plot 6.plottype": "line",
        "Plot 6.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Moving Average Multiple study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Moving Average Triple',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Moving Average Triple study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Moving Average Triple):
To include the Moving Average Triple study, add the following in the `studies` array:
[
  {
    "name": "Moving Average Triple",           # The study to add.
    "input": {
      "firstPeriods": 14,                      # 1st period (Min: 1, Max: 10000).
      "secondPeriods": 21,                     # 2nd Period (Min: 1, Max: 10000).
      "thirdPeriods": 35,                      # 3rd Period (Min: 1, Max: 10000).
      "method": "Simple"                       # Method [Simple, Exponential, Weighted].
    },
    "override": {
      "Plot 1.linewidth": 1,                   # Line width for the first plot (Min: 1, Max: 10).
      "Plot 1.plottype": "line",               # Plot type for the first plot (e.g., 'line').
      "Plot 1.color": "rgb(255,109,0)",        # Plot color for the first plot in RGB format.
      "Plot 2.linewidth": 1,                   # Line width for the second plot (Min: 1, Max: 10).
      "Plot 2.plottype": "line",               # Plot type for the second plot (e.g., 'line').
      "Plot 2.color": "rgb(33,150,243)",       # Plot color for the second plot in RGB format.
      "Plot 3.linewidth": 1,                   # Line width for the third plot (Min: 1, Max: 10).
      "Plot 3.plottype": "line",               # Plot type for the third plot (e.g., 'line').
      "Plot 3.color": "rgb(38,198,218)"        # Plot color for the third plot in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Moving Average Triple",
      "input": {
        "firstPeriods": 14,
        "secondPeriods": 21,
        "thirdPeriods": 35,
        "method": "Simple"
      },
      "override": {
        "Plot 1.linewidth": 1,
        "Plot 1.plottype": "line",
        "Plot 1.color": "rgb(255,109,0)",
        "Plot 2.linewidth": 1,
        "Plot 2.plottype": "line",
        "Plot 2.color": "rgb(33,150,243)",
        "Plot 3.linewidth": 1,
        "Plot 3.plottype": "line",
        "Plot 3.color": "rgb(38,198,218)"
      }
    }
  ]
}

This request generates a chart with the Moving Average Triple study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Moving Average Weighted',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Moving Average Weighted study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the studies on the chart.
}

#### Studies Section (For Moving Average Weighted):
To include the Moving Average Weighted study, add the following in the `studies` array:
[
  {
    "name": "Moving Average Weighted",         # The study to add.
    "input": {
      "in_0": 9,                               # Length (Min: 1, Max: 2000).
      "in_1": "close",                         # Source [open, high, low, close, hl2, hlc3, ohlc4].
      "in_2": 0                                # Offset (Min: -10000, Max: 10000).
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Moving Average Weighted",
      "input": {
        "in_0": 9,
        "in_1": "close",
        "in_2": 0
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Moving Average Weighted study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Net Volume',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Net Volume study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Net Volume):
To include the Net Volume study, add the following in the `studies` array:
[
  {
    "name": "Net Volume",                      # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main pane.
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Net Volume",
      "forceOverlay": false,
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Net Volume study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'On Balance Volume',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the On Balance Volume study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For On Balance Volume):
To include the On Balance Volume study, add the following in the `studies` array:
[
  {
    "name": "On Balance Volume",                # The study to add.
    "forceOverlay": false,                      # Whether to overlay the study on the main chart.
    "input": {
      "smoothingLine": "SMA",                  # Smoothing line type (SMA, EMA, WMA).
      "smoothingLength": 9                      # Smoothing length (Min: 1, Max: 10000).
    },
    "override": {
      "Plot.linewidth": 1,                      # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                  # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "On Balance Volume",
      "forceOverlay": false,
      "input": {
        "smoothingLine": "SMA",
        "smoothingLength": 9
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the On Balance Volume study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Parabolic SAR',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Parabolic SAR study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlay on the chart.
}

#### Studies Section (For Parabolic SAR):
To include the Parabolic SAR study, add the following in the `studies` array:
[
  {
    "name": "Parabolic SAR",                   # The study to add.
    "input": {
      "in_0": 0.02,                            # Start (Min: -100000, Max: 100000).
      "in_1": 0.02,                            # Increment (Min: -100000, Max: 100000).
      "in_2": 0.2                              # Maximum (Min: -100000, Max: 100000).
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "cross",                # Plot type (e.g., 'line', 'histogram', 'cross').
      "Plot.color": "rgb(33,150,243)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Parabolic SAR",
      "input": {
        "in_0": 0.02,
        "in_1": 0.02,
        "in_2": 0.2
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "cross",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Parabolic SAR study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Price Channel',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Price Channel study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to force overlay on the chart.
}

#### Studies Section (For Price Channel):
To include the Price Channel study, add the following in the `studies` array:
[
  {
    "name": "Price Channel",                   # The study to add.
    "input": {
      "in_0": 20,                              # Length for the price channel.
      "in_1": 0                                # Offset length.
    },
    "override": {
      "Highprice Line.visible": true,          # Visibility of the high price line.
      "Highprice Line.linewidth": 1,           # Line width for the high price line.
      "Highprice Line.plottype": "line",      # Plot type for the high price line.
      "Highprice Line.color": "rgb(245,0,87)",# Color for the high price line.
      "Lowprice Line.visible": true,           # Visibility of the low price line.
      "Lowprice Line.linewidth": 1,            # Line width for the low price line.
      "Lowprice Line.plottype": "line",       # Plot type for the low price line.
      "Lowprice Line.color": "rgb(245,0,87)", # Color for the low price line.
      "Centerprice Line.visible": true,        # Visibility of the center price line.
      "Centerprice Line.linewidth": 1,         # Line width for the center price line.
      "Centerprice Line.plottype": "line",    # Plot type for the center price line.
      "Centerprice Line.color": "rgb(33,150,243)" # Color for the center price line.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Price Channel",
      "input": {
        "in_0": 20,
        "in_1": 0
      },
      "override": {
        "Highprice Line.visible": true,
        "Highprice Line.linewidth": 1,
        "Highprice Line.plottype": "line",
        "Highprice Line.color": "rgb(245,0,87)",
        "Lowprice Line.visible": true,
        "Lowprice Line.linewidth": 1,
        "Lowprice Line.plottype": "line",
        "Lowprice Line.color": "rgb(245,0,87)",
        "Centerprice Line.visible": true,
        "Centerprice Line.linewidth": 1,
        "Centerprice Line.plottype": "line",
        "Centerprice Line.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Price Channel study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Price Oscillator',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Price Oscillator study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Price Oscillator):
To include the Price Oscillator study, add the following in the `studies` array:
[
  {
    "name": "Price Oscillator",                # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main pane.
    "input": {
      "in_0": 10,                              # Short length for the oscillator.
      "in_1": 21                               # Long length for the oscillator.
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(8,153,129)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Price Oscillator",
      "forceOverlay": false,
      "input": {
        "in_0": 10,
        "in_1": 21
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(8,153,129)"
      }
    }
  ]
}

This request generates a chart with the Price Oscillator study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Price Volume Trend',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Price Volume Trend study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Price Volume Trend):
To include the Price Volume Trend study, add the following in the `studies` array:
[
  {
    "name": "Price Volume Trend",              # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main pane.
    "override": {
      "PVT.linewidth": 1,                      # Line width for the study plot (Min: 1, Max: 10).
      "PVT.plottype": "line",                  # Plot type (e.g., 'line').
      "PVT.color": "rgb(33,150,243)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Price Volume Trend",
      "forceOverlay": false,
      "override": {
        "PVT.linewidth": 1,
        "PVT.plottype": "line",
        "PVT.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Price Volume Trend study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Rate Of Change',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Rate Of Change study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "override": {
    "showMainPane": false                     # Whether to show the main pane or not.
  }
}

#### Studies Section (For Rate Of Change):
To include the Rate Of Change study, add the following in the `studies` array:
[
  {
    "name": "Rate Of Change",                  # The study to add.
    "forceOverlay": false,                     # Whether to force the study to overlay on the main chart.
    "input": {
      "in_0": 9                                 # Look-back period for the Rate Of Change.
    },
    "override": {
      "ROC.linewidth": 1,                      # Line width for the study plot.
      "ROC.plottype": "line",                  # Plot type (e.g., 'line').
      "ROC.color": "rgb(33,150,243)",         # Plot color in RGB format.
      "Zero Line.visible": true,                # Whether to show the zero line.
      "Zero Line.linestyle": 2,                 # Line style for the zero line.
      "Zero Line.linewidth": 1,                 # Line width for the zero line.
      "Zero Line.value": 0,                     # Value of the zero line.
      "Zero Line.color": "rgb(120,123,134)"    # Color of the zero line in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "override": {
    "showMainPane": false
  },
  "studies": [
    {
      "name": "Rate Of Change",
      "forceOverlay": false,
      "input": {
        "in_0": 9
      },
      "override": {
        "ROC.linewidth": 1,
        "ROC.plottype": "line",
        "ROC.color": "rgb(33,150,243)",
        "Zero Line.visible": true,
        "Zero Line.linestyle": 2,
        "Zero Line.linewidth": 1,
        "Zero Line.value": 0,
        "Zero Line.color": "rgb(120,123,134)"
      }
    }
  ]
}

This request generates a chart with the Rate Of Change study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Relative Strength Index',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Relative Strength Index study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Relative Strength Index):
To include the Relative Strength Index study, add the following in the `studies` array:
[
  {
    "name": "Relative Strength Index",          # The study to add.
    "forceOverlay": false,                      # Indicates if the study should overlay on the main chart.
    "input": {
      "length": 14,                             # Length for the RSI calculation.
      "smoothingLine": "SMA",                   # Smoothing line type (SMA, EMA, WMA).
      "smoothingLength": 14                      # Smoothing length for the line.
    },
    "override": {
      "Plot.linewidth": 1,                      # Line width for the study plot.
      "Plot.plottype": "line",                  # Plot type (e.g., 'line').
      "Plot.color": "rgb(126,87,194)",         # Plot color in RGB format.
      "UpperLimit.visible": true,                # Visibility of the upper limit line.
      "UpperLimit.linestyle": 2,                 # Line style for the upper limit.
      "UpperLimit.linewidth": 1,                 # Line width for the upper limit.
      "UpperLimit.value": 70,                    # Value for the upper limit.
      "UpperLimit.color": "rgb(120,123,134)",   # Color for the upper limit line.
      "LowerLimit.visible": true,                # Visibility of the lower limit line.
      "LowerLimit.linestyle": 2,                 # Line style for the lower limit.
      "LowerLimit.linewidth": 1,                 # Line width for the lower limit.
      "LowerLimit.value": 30,                    # Value for the lower limit.
      "LowerLimit.color": "rgb(120,123,134)",   # Color for the lower limit line.
      "Hlines Background.visible": true,         # Visibility of the background lines.
      "Hlines Background.color": "rgba(126,87,194,0.1)" # Background color for horizontal lines.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Relative Strength Index",
      "forceOverlay": false,
      "input": {
        "length": 14,
        "smoothingLine": "SMA",
        "smoothingLength": 14
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(126,87,194)",
        "UpperLimit.visible": true,
        "UpperLimit.linestyle": 2,
        "UpperLimit.linewidth": 1,
        "UpperLimit.value": 70,
        "UpperLimit.color": "rgb(120,123,134)",
        "LowerLimit.visible": true,
        "LowerLimit.linestyle": 2,
        "LowerLimit.linewidth": 1,
        "LowerLimit.value": 30,
        "LowerLimit.color": "rgb(120,123,134)",
        "Hlines Background.visible": true,
        "Hlines Background.color": "rgba(126,87,194,0.1)"
      }
    }
  ]
}

This request generates a chart with the Relative Strength Index study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Relative Vigor Index',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Relative Vigor Index study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Relative Vigor Index):
To include the Relative Vigor Index study, add the following in the `studies` array:
[
  {
    "name": "Relative Vigor Index",            # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "input": {
      "in_0": 10                               # Length for the Relative Vigor Index.
    },
    "override": {
      "RVGI.visible": true,                    # Visibility of the RVGI plot.
      "RVGI.linewidth": 1,                     # Line width for the RVGI plot.
      "RVGI.plottype": "line",                 # Plot type for the RVGI (e.g., 'line').
      "RVGI.color": "rgb(8,153,129)",         # Plot color for the RVGI in RGB format.
      "Signal.visible": true,                  # Visibility of the Signal plot.
      "Signal.linewidth": 1,                   # Line width for the Signal plot.
      "Signal.plottype": "line",               # Plot type for the Signal (e.g., 'line').
      "Signal.color": "rgb(242,54,69)"        # Plot color for the Signal in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Relative Vigor Index",
      "forceOverlay": false,
      "input": {
        "in_0": 10
      },
      "override": {
        "RVGI.visible": true,
        "RVGI.linewidth": 1,
        "RVGI.plottype": "line",
        "RVGI.color": "rgb(8,153,129)",
        "Signal.visible": true,
        "Signal.linewidth": 1,
        "Signal.plottype": "line",
        "Signal.color": "rgb(242,54,69)"
      }
    }
  ]
}

This request generates a chart with the Relative Vigor Index study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'SMI Ergodic Indicator/Oscillator',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the SMI Ergodic Indicator/Oscillator study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For SMI Ergodic Indicator/Oscillator):
To include the SMI Ergodic Indicator/Oscillator study, add the following in the `studies` array:
[
  {
    "name": "SMI Ergodic Indicator/Oscillator", # The study to add.
    "forceOverlay": false,                      # Indicates whether to overlay the indicator on the main chart.
    "input": {
      "in_0": 5,                                # Short length (Min: 1, Max: 2000).
      "in_1": 20,                               # Long length (Min: 1, Max: 2000).
      "in_2": 5                                 # Signal length (Min: 1, Max: 2000).
    },
    "override": {
      "Indicator.visible": true,                # Visibility of the main indicator.
      "Indicator.linewidth": 1,                 # Line width for the main indicator (Min: 1, Max: 10).
      "Indicator.plottype": "line",             # Plot type for the main indicator.
      "Indicator.color": "rgb(33,150,243)",     # Color for the main indicator in RGB format.
      "Signal.visible": true,                    # Visibility of the signal line.
      "Signal.linewidth": 1,                     # Line width for the signal line (Min: 1, Max: 10).
      "Signal.plottype": "line",                # Plot type for the signal line.
      "Signal.color": "rgb(255,109,0)",         # Color for the signal line in RGB format.
      "Oscillator.visible": true,                # Visibility of the oscillator.
      "Oscillator.linewidth": 1,                 # Line width for the oscillator (Min: 1, Max: 10).
      "Oscillator.plottype": "histogram",       # Plot type for the oscillator.
      "Oscillator.color": "rgb(255,82,82)"      # Color for the oscillator in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "SMI Ergodic Indicator/Oscillator",
      "forceOverlay": false,
      "input": {
        "in_0": 5,
        "in_1": 20,
        "in_2": 5
      },
      "override": {
        "Indicator.visible": true,
        "Indicator.linewidth": 1,
        "Indicator.plottype": "line",
        "Indicator.color": "rgb(33,150,243)",
        "Signal.visible": true,
        "Signal.linewidth": 1,
        "Signal.plottype": "line",
        "Signal.color": "rgb(255,109,0)",
        "Oscillator.visible": true,
        "Oscillator.linewidth": 1,
        "Oscillator.plottype": "histogram",
        "Oscillator.color": "rgb(255,82,82)"
      }
    }
  ]
}

This request generates a chart with the SMI Ergodic Indicator/Oscillator study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Smoothed Moving Average',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Smoothed Moving Average study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the studies on the chart.
}

#### Studies Section (For Smoothed Moving Average):
To include the Smoothed Moving Average study, add the following in the `studies` array:
[
  {
    "name": "Smoothed Moving Average",         # The study to add.
    "input": {
      "in_0": 7,                               # Length of the moving average (Min: 1, Max: 100000).
      "in_1": "close"                          # Source for the moving average [open, high, low, close, hl2, hlc3, ohlc4].
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(103,58,183)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Smoothed Moving Average",
      "input": {
        "in_0": 7,
        "in_1": "close"
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(103,58,183)"
      }
    }
  ]
}

This request generates a chart with the Smoothed Moving Average study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Standard Deviation',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Standard Deviation study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Indicates whether to force the study to overlay on the main pane.
}

#### Studies Section (For Standard Deviation):
To include the Standard Deviation study, add the following in the `studies` array:
[
  {
    "name": "Standard Deviation",              # The study to add.
    "forceOverlay": false,                     # Indicates whether to force the study to overlay on the main pane.
    "input": {
      "periods": 5,                            # Periods for the standard deviation (Min: 1, Max: 100000).
      "deviations": 1                          # Deviations for the standard deviation (Min: -100000, Max: 100000).
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(8,153,129)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Standard Deviation",
      "forceOverlay": false,
      "input": {
        "periods": 5,
        "deviations": 1
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(8,153,129)"
      }
    }
  ]
}

This request generates a chart with the Standard Deviation study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Standard Error',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Standard Error study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Standard Error):
To include the Standard Error study, add the following in the `studies` array:
[
  {
    "name": "Standard Error",                  # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main pane.
    "input": {
      "length": 14                             # Length for the standard error calculation (Min: 3, Max: 100000).
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(255,109,0)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Standard Error",
      "forceOverlay": false,
      "input": {
        "length": 14
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(255,109,0)"
      }
    }
  ]
}

This request generates a chart with the Standard Error study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Standard Error Bands',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Standard Error Bands study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to force overlay on the chart.
}

#### Studies Section (For Standard Error Bands):
To include the Standard Error Bands study, add the following in the `studies` array:
[
  {
    "name": "Standard Error Bands",            # The study to add.
    "input": {
      "periods": 21,                           # Period for the calculation.
      "errors": 2,                             # Standard errors.
      "method": "Simple",                      # Method of calculation (Simple, Exponential, Weighted).
      "averagePeriods": 3                      # Average periods for smoothing.
    },
    "override": {
      "Plot 1.visible": true,                  # Visibility of Plot 1.
      "Plot 1.linewidth": 1,                   # Line width for Plot 1.
      "Plot 1.plottype": "line",               # Plot type for Plot 1.
      "Plot 1.color": "rgb(33,150,243)",       # Color for Plot 1.
      "Plot 2.visible": true,                  # Visibility of Plot 2.
      "Plot 2.linewidth": 1,                   # Line width for Plot 2.
      "Plot 2.plottype": "line",               # Plot type for Plot 2.
      "Plot 2.color": "rgb(255,109,0)",        # Color for Plot 2.
      "Plot 3.visible": true,                  # Visibility of Plot 3.
      "Plot 3.linewidth": 1,                   # Line width for Plot 3.
      "Plot 3.plottype": "line",               # Plot type for Plot 3.
      "Plot 3.color": "rgb(33,150,243)",       # Color for Plot 3.
      "Background.visible": true,               # Visibility of the background.
      "Background.color": "rgba(33,150,243,0.1)" # Background color.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Standard Error Bands",
      "input": {
        "periods": 21,
        "errors": 2,
        "method": "Simple",
        "averagePeriods": 3
      },
      "override": {
        "Plot 1.visible": true,
        "Plot 1.linewidth": 1,
        "Plot 1.plottype": "line",
        "Plot 1.color": "rgb(33,150,243)",
        "Plot 2.visible": true,
        "Plot 2.linewidth": 1,
        "Plot 2.plottype": "line",
        "Plot 2.color": "rgb(255,109,0)",
        "Plot 3.visible": true,
        "Plot 3.linewidth": 1,
        "Plot 3.plottype": "line",
        "Plot 3.color": "rgb(33,150,243)",
        "Background.visible": true,
        "Background.color": "rgba(33,150,243,0.1)"
      }
    }
  ]
}

This request generates a chart with the Standard Error Bands study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Stochastic',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Stochastic study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Indicates whether to force overlay of the study.
}

#### Studies Section (For Stochastic):
To include the Stochastic study, add the following in the `studies` array:
[
  {
    "name": "Stochastic",                      # The study to add.
    "forceOverlay": false,                     # Indicates whether to force overlay of the study.
    "input": {
      "in_0": 14,                              # K (Min: 1, Max: 10000)
      "in_1": 1,                               # D (Min: 1, Max: 10000)
      "in_2": 3                                # Smooth (Min: 1, Max: 10000)
    },
    "override": {
      "%K.visible": true,                      # Visibility of %K line.
      "%K.linewidth": 1,                       # Line width for %K.
      "%K.plottype": "line",                   # Plot type for %K.
      "%K.color": "rgb(33,150,243)",          # Color for %K line.
      "%D.visible": true,                      # Visibility of %D line.
      "%D.linewidth": 1,                       # Line width for %D.
      "%D.plottype": "line",                   # Plot type for %D.
      "%D.color": "rgb(255,109,0)",           # Color for %D line.
      "UpperLimit.visible": true,              # Visibility of upper limit line.
      "UpperLimit.linestyle": 2,               # Line style for upper limit.
      "UpperLimit.linewidth": 1,               # Line width for upper limit.
      "UpperLimit.value": 80,                  # Value for upper limit.
      "UpperLimit.color": "rgb(120,123,134)", # Color for upper limit line.
      "LowerLimit.visible": true,              # Visibility of lower limit line.
      "LowerLimit.linestyle": 2,               # Line style for lower limit.
      "LowerLimit.linewidth": 1,               # Line width for lower limit.
      "LowerLimit.value": 20,                  # Value for lower limit.
      "LowerLimit.color": "rgb(120,123,134)", # Color for lower limit line.
      "Hlines Background.visible": true,       # Visibility of horizontal lines background.
      "Hlines Background.color": "rgba(33,150,243,0.1)" # Color for horizontal lines background.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Stochastic",
      "forceOverlay": false,
      "input": {
        "in_0": 14,
        "in_1": 1,
        "in_2": 3
      },
      "override": {
        "%K.visible": true,
        "%K.linewidth": 1,
        "%K.plottype": "line",
        "%K.color": "rgb(33,150,243)",
        "%D.visible": true,
        "%D.linewidth": 1,
        "%D.plottype": "line",
        "%D.color": "rgb(255,109,0)",
        "UpperLimit.visible": true,
        "UpperLimit.linestyle": 2,
        "UpperLimit.linewidth": 1,
        "UpperLimit.value": 80,
        "UpperLimit.color": "rgb(120,123,134)",
        "LowerLimit.visible": true,
        "LowerLimit.linestyle": 2,
        "LowerLimit.linewidth": 1,
        "LowerLimit.value": 20,
        "LowerLimit.color": "rgb(120,123,134)",
        "Hlines Background.visible": true,
        "Hlines Background.color": "rgba(33,150,243,0.1)"
      }
    }
  ]
}

This request generates a chart with the Stochastic study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Stochastic RSI',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Stochastic RSI study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "override": {
    "showMainPane": false                     # Whether to show the main pane or not.
  }
}

#### Studies Section (For Stochastic RSI):
To include the Stochastic RSI study, add the following in the `studies` array:
[
  {
    "name": "Stochastic RSI",                  # The study to add.
    "forceOverlay": false,                     # Whether to force the study to overlay on the main chart.
    "input": {
      "in_0": 14,                              # Length RSI (Min: 1, Max: 10000).
      "in_1": 14,                              # Length Stoch (Min: 1, Max: 10000).
      "in_2": 3,                               # Smooth K (Min: 1, Max: 10000).
      "in_3": 3                                # Smooth D (Min: 1, Max: 10000).
    },
    "override": {
      "%K.visible": true,                      # Visibility of %K line.
      "%K.linewidth": 1,                       # Line width for %K.
      "%K.plottype": "line",                   # Plot type for %K.
      "%K.color": "rgb(33,150,243)",          # Color for %K in RGB format.
      "%D.visible": true,                      # Visibility of %D line.
      "%D.linewidth": 1,                       # Line width for %D.
      "%D.plottype": "line",                   # Plot type for %D.
      "%D.color": "rgb(255,109,0)",           # Color for %D in RGB format.
      "UpperLimit.visible": true,              # Visibility of upper limit line.
      "UpperLimit.linestyle": 2,               # Line style for upper limit.
      "UpperLimit.linewidth": 1,               # Line width for upper limit.
      "UpperLimit.value": 80,                  # Value for upper limit.
      "UpperLimit.color": "rgb(120,123,134)", # Color for upper limit in RGB format.
      "LowerLimit.visible": true,              # Visibility of lower limit line.
      "LowerLimit.linestyle": 2,               # Line style for lower limit.
      "LowerLimit.linewidth": 1,               # Line width for lower limit.
      "LowerLimit.value": 20,                  # Value for lower limit.
      "LowerLimit.color": "rgb(120,123,134)", # Color for lower limit in RGB format.
      "Hlines Background.visible": true,       # Visibility of horizontal lines background.
      "Hlines Background.color": "rgba(33,150,243,0.1)" # Color for horizontal lines background in RGBA format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "override": {
    "showMainPane": false
  },
  "studies": [
    {
      "name": "Stochastic RSI",
      "forceOverlay": false,
      "input": {
        "in_0": 14,
        "in_1": 14,
        "in_2": 3,
        "in_3": 3
      },
      "override": {
        "%K.visible": true,
        "%K.linewidth": 1,
        "%K.plottype": "line",
        "%K.color": "rgb(33,150,243)",
        "%D.visible": true,
        "%D.linewidth": 1,
        "%D.plottype": "line",
        "%D.color": "rgb(255,109,0)",
        "UpperLimit.visible": true,
        "UpperLimit.linestyle": 2,
        "UpperLimit.linewidth": 1,
        "UpperLimit.value": 80,
        "UpperLimit.color": "rgb(120,123,134)",
        "LowerLimit.visible": true,
        "LowerLimit.linestyle": 2,
        "LowerLimit.linewidth": 1,
        "LowerLimit.value": 20,
        "LowerLimit.color": "rgb(120,123,134)",
        "Hlines Background.visible": true,
        "Hlines Background.color": "rgba(33,150,243,0.1)"
      }
    }
  ]
}

This request generates a chart with the Stochastic RSI study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Super Trend',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Super Trend study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Super Trend):
To include the Super Trend study, add the following in the `studies` array:
[
  {
    "name": "Super Trend",                     # The study to add.
    "input": {
      "in_0": 10,                              # Length parameter for the Super Trend.
      "in_1": 3                                # Factor parameter for the Super Trend.
    },
    "override": {
      "SuperTrend.plottype": "line",          # Plot type for the Super Trend.
      "SuperTrend.color.0": "rgb(0,128,0)",   # Color for the up trend.
      "SuperTrend.color.1": "rgb(128,0,0)"    # Color for the down trend.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Super Trend",
      "input": {
        "in_0": 10,
        "in_1": 3
      },
      "override": {
        "SuperTrend.plottype": "line",
        "SuperTrend.color.0": "rgb(0,128,0)",
        "SuperTrend.color.1": "rgb(128,0,0)"
      }
    }
  ]
}

This request generates a chart with the Super Trend study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Trend Strength Index',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Trend Strength Index study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Trend Strength Index):
To include the Trend Strength Index study, add the following in the `studies` array:
[
  {
    "name": "Trend Strength Index",            # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "input": {
      "periods": 9                             # Look-back period for the Trend Strength Index.
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(255,82,82)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Trend Strength Index",
      "forceOverlay": false,
      "input": {
        "periods": 9
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(255,82,82)"
      }
    }
  ]
}

This request generates a chart with the Trend Strength Index study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Triple EMA',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Triple EMA study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Triple EMA):
To include the Triple EMA study, add the following in the `studies` array:
[
  {
    "name": "Triple EMA",                      # The study to add.
    "input": {
      "in_0": 9                                 # Length for the Triple EMA.
    },
    "override": {
      "Plot.linewidth": 1,                      # Line width for the study plot.
      "Plot.plottype": "line",                  # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Triple EMA",
      "input": {
        "in_0": 9
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Triple EMA study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'TRIX',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the TRIX study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For TRIX):
To include the TRIX study, add the following in the `studies` array:
[
  {
    "name": "TRIX",                           # The study to add.
    "forceOverlay": false,                    # Indicates whether to overlay the study on the main chart.
    "input": {
      "in_0": 18                               # Length for the TRIX calculation.
    },
    "override": {
      "TRIX.linewidth": 1,                    # Line width for the TRIX plot.
      "TRIX.plottype": "line",                # Plot type (e.g., 'line').
      "TRIX.color": "rgb(242,54,69)",         # Plot color in RGB format.
      "Zero.visible": true,                    # Visibility of the zero line.
      "Zero.linestyle": 2,                     # Line style for the zero line.
      "Zero.linewidth": 1,                     # Line width for the zero line.
      "Zero.value": 0,                         # Value for the zero line.
      "Zero.color": "rgb(120,123,134)"        # Color for the zero line in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "TRIX",
      "forceOverlay": false,
      "input": {
        "in_0": 18
      },
      "override": {
        "TRIX.linewidth": 1,
        "TRIX.plottype": "line",
        "TRIX.color": "rgb(242,54,69)",
        "Zero.visible": true,
        "Zero.linestyle": 2,
        "Zero.linewidth": 1,
        "Zero.value": 0,
        "Zero.color": "rgb(120,123,134)"
      }
    }
  ]
}

This request generates a chart with the TRIX study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'True Strength Index',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the True Strength Index study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "override": {
    "showMainPane": false                     # Indicates whether to show the main pane.
  }
}

#### Studies Section (For True Strength Index):
To include the True Strength Index study, add the following in the `studies` array:
[
  {
    "name": "True Strength Index",             # The study to add.
    "forceOverlay": false,                     # Indicates whether to force overlay on the main chart.
    "input": {
      "in_0": 25,                              # Long period (Min: 1, Max: 4999).
      "in_1": 13,                              # Short period (Min: 1, Max: 4999).
      "in_2": 13                               # Signal length (Min: 1, Max: 4999).
    },
    "override": {
      "True Strength Index.visible": true,     # Visibility of the True Strength Index.
      "True Strength Index.linewidth": 1,      # Line width for the True Strength Index plot.
      "True Strength Index.plottype": "line",  # Plot type for the True Strength Index.
      "True Strength Index.color": "rgb(33,150,243)", # Plot color in RGB format.
      "Signal.visible": true,                   # Visibility of the Signal line.
      "Signal.linewidth": 1,                    # Line width for the Signal plot.
      "Signal.plottype": "line",                # Plot type for the Signal.
      "Signal.color": "rgb(233,30,99)",        # Plot color for the Signal in RGB format.
      "Zero.visible": true,                     # Visibility of the Zero line.
      "Zero.linestyle": 2,                      # Line style for the Zero line.
      "Zero.linewidth": 1,                      # Line width for the Zero line.
      "Zero.value": 0,                         # Value for the Zero line.
      "Zero.color": "rgb(120,123,134)"         # Color for the Zero line in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "override": {
    "showMainPane": false
  },
  "studies": [
    {
      "name": "True Strength Index",
      "forceOverlay": false,
      "input": {
        "in_0": 25,
        "in_1": 13,
        "in_2": 13
      },
      "override": {
        "True Strength Index.visible": true,
        "True Strength Index.linewidth": 1,
        "True Strength Index.plottype": "line",
        "True Strength Index.color": "rgb(33,150,243)",
        "Signal.visible": true,
        "Signal.linewidth": 1,
        "Signal.plottype": "line",
        "Signal.color": "rgb(233,30,99)",
        "Zero.visible": true,
        "Zero.linestyle": 2,
        "Zero.linewidth": 1,
        "Zero.value": 0,
        "Zero.color": "rgb(120,123,134)"
      }
    }
  ]
}

This request generates a chart with the True Strength Index study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Ultimate Oscillator',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Ultimate Oscillator study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # The overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Ultimate Oscillator):
To include the Ultimate Oscillator study, add the following in the `studies` array:
[
  {
    "name": "Ultimate Oscillator",             # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "input": {
      "in_0": 7,                               # Length for the first period.
      "in_1": 14,                              # Length for the second period.
      "in_2": 28                               # Length for the third period.
    },
    "override": {
      "UO.linewidth": 1,                       # Line width for the study plot.
      "UO.plottype": "line",                   # Plot type (e.g., 'line').
      "UO.color": "rgb(242,54,69)"             # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 300,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Ultimate Oscillator",
      "forceOverlay": false,
      "input": {
        "in_0": 7,
        "in_1": 14,
        "in_2": 28
      },
      "override": {
        "UO.linewidth": 1,
        "UO.plottype": "line",
        "UO.color": "rgb(242,54,69)"
      }
    }
  ]
}

This request generates a chart with the Ultimate Oscillator study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Volatility Close-to-Close',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Volatility Close-to-Close study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Volatility Close-to-Close):
To include the Volatility Close-to-Close study, add the following in the `studies` array:
[
  {
    "name": "Volatility Close-to-Close",      # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main pane.
    "input": {
      "periods": 10,                           # Number of periods for the calculation (Min: 2, Max: 100000).
      "daysPerYear": 252                       # Number of trading days per year (Min: 1, Max: 366).
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 300,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Volatility Close-to-Close",
      "forceOverlay": false,
      "input": {
        "periods": 10,
        "daysPerYear": 252
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Volatility Close-to-Close study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Volatility Index',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Volatility Index study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Volatility Index):
To include the Volatility Index study, add the following in the `studies` array:
[
  {
    "name": "Volatility Index",                # The study to add.
    "input": {
      "periods": 10,                           # Periods for the calculation (Min: 2, Max: 10000).
      "atrMult": 3,                           # ATR multiplier (Min: -10000, Max: 10000).
      "method": "Wilder Smoothing"             # Method for smoothing [Exponential, Wilder Smoothing].
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(255,82,82)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Volatility Index",
      "input": {
        "periods": 10,
        "atrMult": 3,
        "method": "Wilder Smoothing"
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(255,82,82)"
      }
    }
  ]
}

This request generates a chart with the Volatility Index study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Volatility O-H-L-C',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Volatility O-H-L-C study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Volatility O-H-L-C):
To include the Volatility O-H-L-C study, add the following in the `studies` array:
[
  {
    "name": "Volatility O-H-L-C",              # The study to add.
    "forceOverlay": false,                      # Whether to force the study to overlay on the main chart.
    "input": {
      "periods": 10,                           # Periods for the study (Min: 1, Max: 100000).
      "marketClosedPercentage": 0,             # Market closed percentage (Min: 0, Max: 0.999).
      "daysPerYear": 252                       # Days per year (Min: 1, Max: 100000).
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(255,82,82)"           # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Volatility O-H-L-C",
      "forceOverlay": false,
      "input": {
        "periods": 10,
        "marketClosedPercentage": 0,
        "daysPerYear": 252
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(255,82,82)"
      }
    }
  ]
}

This request generates a chart with the Volatility O-H-L-C study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Volatility Zero Trend Close-to-Close',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Volatility Zero Trend Close-to-Close study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Volatility Zero Trend Close-to-Close):
To include the Volatility Zero Trend Close-to-Close study, add the following in the `studies` array:
[
  {
    "name": "Volatility Zero Trend Close-to-Close",  # The study to add.
    "forceOverlay": false,                             # Indicates whether to overlay the study on the main pane.
    "input": {
      "periods": 10,                                  # Periods for the study (Min: 1, Max: 10000).
      "daysPerYear": 252                              # Days per year for the study (Min: 1, Max: 100000).
    },
    "override": {
      "Plot.linewidth": 1,                            # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                        # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"                 # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Volatility Zero Trend Close-to-Close",
      "forceOverlay": false,
      "input": {
        "periods": 10,
        "daysPerYear": 252
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Volatility Zero Trend Close-to-Close study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Volume',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Volume study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Volume):
To include the Volume study, add the following in the `studies` array:
[
  {
    "name": "Volume",                          # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "override": {
      "Volume.plottype": "columns",            # Plot type for the volume (e.g., 'columns').
      "Volume.color.0": "rgba(247,82,95,0.5)", # Color for increasing volume bars.
      "Volume.color.1": "rgba(34,171,148,0.5)" # Color for decreasing volume bars.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Volume",
      "forceOverlay": false,
      "override": {
        "Volume.plottype": "columns",
        "Volume.color.0": "rgba(247,82,95,0.5)",
        "Volume.color.1": "rgba(34,171,148,0.5)"
      }
    }
  ]
}

This request generates a chart with the Volume study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Volume Oscillator',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Volume Oscillator study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "override": {
    "showMainPane": false                     # Whether to show the main pane or not.
  }
}

#### Studies Section (For Volume Oscillator):
To include the Volume Oscillator study, add the following in the `studies` array:
[
  {
    "name": "Volume Oscillator",               # The study to add.
    "forceOverlay": false,                     # Whether to force the study to overlay on the main chart.
    "input": {
      "in_0": 5,                               # Short length for the oscillator.
      "in_1": 10                               # Long length for the oscillator.
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)",         # Plot color in RGB format.
      "Zero.visible": true,                     # Whether to show the zero line.
      "Zero.linestyle": 2,                      # Line style for the zero line.
      "Zero.linewidth": 1,                      # Line width for the zero line.
      "Zero.value": 0,                          # Value for the zero line.
      "Zero.color": "rgb(120,123,134)"         # Color for the zero line in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "override": {
    "showMainPane": false
  },
  "studies": [
    {
      "name": "Volume Oscillator",
      "forceOverlay": false,
      "input": {
        "in_0": 5,
        "in_1": 10
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)",
        "Zero.visible": true,
        "Zero.linestyle": 2,
        "Zero.linewidth": 1,
        "Zero.value": 0,
        "Zero.color": "rgb(120,123,134)"
      }
    }
  ]
}

This request generates a chart with the Volume Oscillator study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Volume Profile Visible Range',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Volume Profile Visible Range study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to force overlay on the chart.
}

#### Studies Section (For Volume Profile Visible Range):
To include the Volume Profile Visible Range study, add the following in the `studies` array:
[
  {
    "name": "Volume Profile Visible Range",    # The study to add.
    "input": {
      "rows": 24,                              # Row size (Min: 1, Max: 1000000).
      "volume": "Up/Down",                    # Volume type [Up/Down, Total, Delta].
      "vaVolume": 70                           # Value area volume (Min: 0, Max: 100).
    },
    "override": {
      "graphics.hhists.histBars2.direction": "right_to_left",  # Direction of histogram bars.
      "graphics.hhists.histBars2.percentWidth": 30,            # Percent width of histogram bars (Min: 1, Max: 10000).
      "graphics.hhists.histBars2.colors.0": "rgba(21,146,230,0.3)",  # Color for Up volume.
      "graphics.hhists.histBars2.colors.1": "rgba(251,193,35,0.3)",  # Color for Down volume.
      "graphics.hhists.histBarsVA.direction": "right_to_left",  # Direction of value area histogram.
      "graphics.hhists.histBarsVA.percentWidth": 30,            # Percent width of value area histogram (Min: 1, Max: 10000).
      "graphics.hhists.histBarsVA.colors.0": "rgba(21,146,230,0.7)",  # Color for Up value area.
      "graphics.hhists.histBarsVA.colors.1": "rgba(251,193,35,0.7)",  # Color for Down value area.
      "graphics.horizlines.pocLines.visible": true,             # Visibility of POC lines.
      "graphics.horizlines.pocLines.style": 0,                 # Style of POC lines (Min: 0, Max: 2).
      "graphics.horizlines.pocLines.width": 2,                  # Width of POC lines (Min: 1, Max: 10).
      "graphics.horizlines.pocLines.color": "rgb(255,0,0)",    # Color of POC lines.
      "Developing Poc.display": false,                           # Display of developing POC.
      "Developing Poc.linewidth": 1,                            # Line width for developing POC (Min: 1, Max: 10).
      "Developing Poc.plottype": "step_line_with_breaks",      # Plot type for developing POC.
      "Developing Poc.color": "rgb(255,0,0)",                  # Color for developing POC.
      "Developing VA High.display": false,                      # Display of developing VA High.
      "Developing VA High.linewidth": 1,                        # Line width for developing VA High (Min: 1, Max: 10).
      "Developing VA High.plottype": "step_line_with_breaks",  # Plot type for developing VA High.
      "Developing VA High.color": "rgb(0,0,255)",              # Color for developing VA High.
      "Developing VA Low.display": false,                       # Display of developing VA Low.
      "Developing VA Low.linewidth": 1,                         # Line width for developing VA Low (Min: 1, Max: 10).
      "Developing VA Low.plottype": "step_line_with_breaks",   # Plot type for developing VA Low.
      "Developing VA Low.color": "rgb(0,0,255)"                # Color for developing VA Low.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Volume Profile Visible Range",
      "input": {
        "rows": 24,
        "volume": "Up/Down",
        "vaVolume": 70
      },
      "override": {
        "graphics.hhists.histBars2.direction": "right_to_left",
        "graphics.hhists.histBars2.percentWidth": 30,
        "graphics.hhists.histBars2.colors.0": "rgba(21,146,230,0.3)",
        "graphics.hhists.histBars2.colors.1": "rgba(251,193,35,0.3)",
        "graphics.hhists.histBarsVA.direction": "right_to_left",
        "graphics.hhists.histBarsVA.percentWidth": 30,
        "graphics.hhists.histBarsVA.colors.0": "rgba(21,146,230,0.7)",
        "graphics.hhists.histBarsVA.colors.1": "rgba(251,193,35,0.7)",
        "graphics.horizlines.pocLines.visible": true,
        "graphics.horizlines.pocLines.style": 0,
        "graphics.horizlines.pocLines.width": 2,
        "graphics.horizlines.pocLines.color": "rgb(255,0,0)",
        "Developing Poc.display": false,
        "Developing Poc.linewidth": 1,
        "Developing Poc.plottype": "step_line_with_breaks",
        "Developing Poc.color": "rgb(255,0,0)",
        "Developing VA High.display": false,
        "Developing VA High.linewidth": 1,
        "Developing VA High.plottype": "step_line_with_breaks",
        "Developing VA High.color": "rgb(0,0,255)",
        "Developing VA Low.display": false,
        "Developing VA Low.linewidth": 1,
        "Developing VA Low.plottype": "step_line_with_breaks",
        "Developing VA Low.color": "rgb(0,0,255)"
      }
    }
  ]
}

This request generates a chart with the Volume Profile Visible Range study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Vortex Indicator',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Vortex Indicator study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Vortex Indicator):
To include the Vortex Indicator study, add the following in the `studies` array:
[
  {
    "name": "Vortex Indicator",                # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "input": {
      "in_0": 14                               # Look-back period for the Vortex Indicator.
    },
    "override": {
      "VI +.visible": true,                    # Visibility of the positive Vortex line.
      "VI +.linewidth": 1,                     # Line width for the positive Vortex line.
      "VI +.plottype": "line",                 # Plot type for the positive Vortex line.
      "VI +.color": "rgb(33,150,243)",         # Plot color for the positive Vortex line in RGB format.
      "VI -.visible": true,                    # Visibility of the negative Vortex line.
      "VI -.linewidth": 1,                     # Line width for the negative Vortex line.
      "VI -.plottype": "line",                 # Plot type for the negative Vortex line.
      "VI -.color": "rgb(233,30,99)"           # Plot color for the negative Vortex line in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Vortex Indicator",
      "forceOverlay": false,
      "input": {
        "in_0": 14
      },
      "override": {
        "VI +.visible": true,
        "VI +.linewidth": 1,
        "VI +.plottype": "line",
        "VI +.color": "rgb(33,150,243)",
        "VI -.visible": true,
        "VI -.linewidth": 1,
        "VI -.plottype": "line",
        "VI -.color": "rgb(233,30,99)"
      }
    }
  ]
}

This request generates a chart with the Vortex Indicator study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'VWAP',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the VWAP study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For VWAP):
To include the VWAP study, add the following in the `studies` array:
[
  {
    "name": "VWAP",                           # The study to add.
    "override": {
      "VWAP.linewidth": 1,                    # Line width for the study plot.
      "VWAP.plottype": "line",                # Plot type (e.g., 'line').
      "VWAP.color": "rgb(33,150,243)"         # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1h",
  "range": "3M",
  "height": 300,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "VWAP",
      "override": {
        "VWAP.linewidth": 1,
        "VWAP.plottype": "line",
        "VWAP.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the VWAP study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'VWMA',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the VWMA study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlay on the chart.
}

#### Studies Section (For VWMA):
To include the VWMA study, add the following in the `studies` array:
[
  {
    "name": "VWMA",                           # The study to add.
    "input": {
      "in_0": 20                              # Length for the VWMA.
    },
    "override": {
      "Plot.linewidth": 1,                    # Line width for the study plot.
      "Plot.plottype": "line",                # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"         # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "VWMA",
      "input": {
        "in_0": 20
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the VWMA study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Williams %R',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Williams %R study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line"                             # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
}

#### Studies Section (For Williams %R):
To include the Williams %R study, add the following in the `studies` array:
[
  {
    "name": "Williams %R",                     # The study to add.
    "forceOverlay": false,                     # Indicates whether to overlay the study on the main chart.
    "input": {
      "in_0": 14                               # Look-back period for the Williams %R.
    },
    "override": {
      "Plot.linewidth": 1,                     # Line width for the study plot.
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(126,87,194)",         # Plot color in RGB format.
      "UpperLimit.visible": true,               # Visibility of the upper limit line.
      "UpperLimit.linestyle": 2,                # Line style for the upper limit.
      "UpperLimit.linewidth": 1,                # Line width for the upper limit.
      "UpperLimit.value": -20,                  # Value for the upper limit.
      "UpperLimit.color": "rgb(120,123,134)",  # Color for the upper limit line.
      "LowerLimit.visible": true,               # Visibility of the lower limit line.
      "LowerLimit.linestyle": 2,                # Line style for the lower limit.
      "LowerLimit.linewidth": 1,                # Line width for the lower limit.
      "LowerLimit.value": -80,                  # Value for the lower limit.
      "LowerLimit.color": "rgb(120,123,134)",  # Color for the lower limit line.
      "Hlines Background.visible": true,        # Visibility of the horizontal lines background.
      "Hlines Background.color": "rgba(126,87,194,0.1)" # Background color for horizontal lines.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 300,
  "theme": "dark",
  "style": "line",
  "studies": [
    {
      "name": "Williams %R",
      "forceOverlay": false,
      "input": {
        "in_0": 14
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(126,87,194)",
        "UpperLimit.visible": true,
        "UpperLimit.linestyle": 2,
        "UpperLimit.linewidth": 1,
        "UpperLimit.value": -20,
        "UpperLimit.color": "rgb(120,123,134)",
        "LowerLimit.visible": true,
        "LowerLimit.linestyle": 2,
        "LowerLimit.linewidth": 1,
        "LowerLimit.value": -80,
        "LowerLimit.color": "rgb(120,123,134)",
        "Hlines Background.visible": true,
        "Hlines Background.color": "rgba(126,87,194,0.1)"
      }
    }
  ]
}

This request generates a chart with the Williams %R study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Williams Alligator',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Williams Alligator study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                       # Whether to force overlaying the chart.
}

#### Studies Section (For Williams Alligator):
To include the Williams Alligator study, add the following in the `studies` array:
[
  {
    "name": "Williams Alligator",              # The study to add.
    "input": {
      "in_0": 21,                              # Jaw length (Min: 1, Max: 2000).
      "in_1": 13,                              # Teeth length (Min: 1, Max: 2000).
      "in_2": 8,                               # Lips length (Min: 1, Max: 2000).
      "in_3": 8,                               # Jaw offset (Min: 1, Max: 2000).
      "in_4": 5,                               # Teeth offset (Min: 1, Max: 2000).
      "in_5": 3                                # Lips offset (Min: 1, Max: 2000).
    },
    "override": {
      "Jaw.visible": true,                     # Jaw visibility.
      "Jaw.linewidth": 1,                      # Jaw line width (Min: 1, Max: 10).
      "Jaw.plottype": "line",                  # Jaw plot type (e.g., 'line').
      "Jaw.color": "rgb(33,150,243)",         # Jaw color in RGB format.
      "Teeth.visible": true,                   # Teeth visibility.
      "Teeth.linewidth": 1,                    # Teeth line width (Min: 1, Max: 10).
      "Teeth.plottype": "line",                # Teeth plot type (e.g., 'line').
      "Teeth.color": "rgb(233,30,99)",        # Teeth color in RGB format.
      "Lips.visible": true,                    # Lips visibility.
      "Lips.linewidth": 1,                     # Lips line width (Min: 1, Max: 10).
      "Lips.plottype": "line",                 # Lips plot type (e.g., 'line').
      "Lips.color": "rgb(102,187,106)"        # Lips color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Williams Alligator",
      "input": {
        "in_0": 21,
        "in_1": 13,
        "in_2": 8,
        "in_3": 8,
        "in_4": 5,
        "in_5": 3
      },
      "override": {
        "Jaw.visible": true,
        "Jaw.linewidth": 1,
        "Jaw.plottype": "line",
        "Jaw.color": "rgb(33,150,243)",
        "Teeth.visible": true,
        "Teeth.linewidth": 1,
        "Teeth.plottype": "line",
        "Teeth.color": "rgb(233,30,99)",
        "Lips.visible": true,
        "Lips.linewidth": 1,
        "Lips.plottype": "line",
        "Lips.color": "rgb(102,187,106)"
      }
    }
  ]
}

This request generates a chart with the Williams Alligator study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Williams Fractal',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Williams Fractal study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Williams Fractal):
To include the Williams Fractal study, add the following in the `studies` array:
[
  {
    "name": "Williams Fractal",                # The study to add.
    "input": {
      "in_0": 2                                 # Look-back period for the fractal.
    },
    "override": {
      "Up fractals.visible": true,              # Visibility of up fractals.
      "Up fractals.color": "rgb(8,153,129)",   # Color for up fractals in RGB format.
      "Down fractals.visible": true,            # Visibility of down fractals.
      "Down fractals.color": "rgb(242,54,69)"  # Color for down fractals in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Williams Fractal",
      "input": {
        "in_0": 2
      },
      "override": {
        "Up fractals.visible": true,
        "Up fractals.color": "rgb(8,153,129)",
        "Down fractals.visible": true,
        "Down fractals.color": "rgb(242,54,69)"
      }
    }
  ]
}

This request generates a chart with the Williams Fractal study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Zig Zag',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Zig Zag study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Zig Zag):
To include the Zig Zag study, add the following in the `studies` array:
[
  {
    "name": "Zig Zag",                         # The study to add.
    "input": {
      "in_0": 5,                               # Deviation (Min: 0.001, Max: 100).
      "in_1": 10                               # Depth (Min: 2, Max: 1000).
    },
    "override": {
      "Plot.linewidth": 2,                     # Line width for the study plot (Min: 1, Max: 10).
      "Plot.plottype": "line",                 # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"          # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Zig Zag",
      "input": {
        "in_0": 5,
        "in_1": 10
      },
      "override": {
        "Plot.linewidth": 2,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Zig Zag study applied to the specified symbol and interval.
"""
},

 {
  'indicator name': 'Linear Regression Curve',
  'description': """
This is a POST request for generating an advanced TradingView chart image using the CHART-IMG API. It includes base parameters like interval, chart style, and range, with a clear example of how to add the Linear Regression Curve study in the `studies` section.

### API Endpoint
POST https://api.chart-img.com/v2/tradingview/advanced-chart

### Request Header
{
  "x-api-key": "{YOUR_API_KEY}",               # Required: Your API authentication key.
  "content-type": "application/json"          # Indicates the payload format.
}

### Request Parameters (Body)
The request body is JSON-encoded and includes the following main parameters:

#### General Parameters:
{
  "symbol": "NASDAQ:MSFT",                    # The symbol to plot, formatted as EXCHANGE:SYMBOL.
  "interval": "1D",                           # Chart interval - the distance between data points choose from: [1m, 3m, 5m, 15m, 30m, 45m, 1h, 2h, 3h, 4h, 6h, 12h, 1D, 1W, 1M, 3M, 6M, 1Y].
  "range": "3M",                              # the overall period on the chart, choose from:  1D, 5D, 1M, 3M, 6M, 1Y, 5Y, ALL, DTD, WTD, MTD, YTD.
  "height": 400,                              # Chart height in pixels (min: 300).
  "theme": "dark",                            # Chart theme ('light' or 'dark').
  "style": "line",                            # Chart style choose from: (bar, candle, line, area, heikinAshi, hollowCandle, baseline, hiLo, column).
  "forceOverlay": false                        # Whether to force overlaying the chart.
}

#### Studies Section (For Linear Regression Curve):
To include the Linear Regression Curve study, add the following in the `studies` array:
[
  {
    "name": "Linear Regression Curve",        # The study to add.
    "input": {
      "in_0": 9                               # Look-back period for the regression curve.
    },
    "override": {
      "Plot.linewidth": 1,                    # Line width for the study plot.
      "Plot.plottype": "line",                # Plot type (e.g., 'line').
      "Plot.color": "rgb(33,150,243)"         # Plot color in RGB format.
    }
  }
]

### Example Request
{
  "symbol": "NASDAQ:MSFT",
  "interval": "1D",
  "range": "3M",
  "height": 400,
  "theme": "dark",
  "style": "line",
  "forceOverlay": false,
  "studies": [
    {
      "name": "Linear Regression Curve",
      "input": {
        "in_0": 9
      },
      "override": {
        "Plot.linewidth": 1,
        "Plot.plottype": "line",
        "Plot.color": "rgb(33,150,243)"
      }
    }
  ]
}

This request generates a chart with the Linear Regression Curve study applied to the specified symbol and interval.
"""
}
]